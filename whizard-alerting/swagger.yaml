swagger: "2.0"
info:
  description: |-
    ## WhizardTelemetry Alerting OpenAPI
    _It is preferable to make API requests through KubeSphere APIServer, as it provides user authorization and authentication. In this case, a `/proxy` prefix is required._
  title: WhizardTelemetry Alerting
  contact:
    name: KubeSphere
    url: https://kubesphere.com.cn
    email: kubesphere@yunify.com
  version: v0.0.0
paths:
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/clusteralerts:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the alerts of clusterrulegroups in the cluster
      operationId: handleListClusterAlerts
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, one of `activeAt`. e.g. orderBy=activeAt
          name: sortBy
          in: query
        - type: string
          description: state, one of `firing`, `pending`
          name: state
          in: query
        - type: string
          format: key=%s,key~%s
          description: label filters, concatenating multiple filters with commas, equal symbol for exact query, wave symbol for fuzzy query e.g. name~a
          name: label_filters
          in: query
        - type: string
          description: label matcher to match alert labels, follow prometheus matcher format. e.g. `{label_name1="valueA",label_name2=~"valueB|valueC"}`
          name: label_matcher
          in: query
        - type: string
          description: filter alerts, `true` for alerts from built-in rule groups and `false` for alerts from custom rule groups
          name: builtin
          in: query
        - type: string
          description: keyword to search alerts
          name: keyword
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.Alert%5D'
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/clusterrulegroups:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the clusterrulegroups
      operationId: handleListClusterRuleGroups
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: name used to do filtering
          name: name
          in: query
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, e.g. orderBy=createTime
          name: sortBy
          in: query
        - type: string
          description: filter rule groups which contain rules in specified state, one of `firing`, `pending`, `inactive`, `disabled`
          name: state
          in: query
        - type: string
          description: filter alerts, `true` for alerts from built-in rule groups and `false` for alerts from custom rule groups
          name: builtin
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.ClusterRuleGroup%5D'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Create a clusterrulegroup
      operationId: handleCreateClusterRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/clusterrulegroups/{name}:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: get the clusterrulegroup with the specified name
      operationId: handleGetClusterRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified clusterrulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Update the clusterrulegroup
      operationId: handleUpdateClusterRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified clusterrulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Delete the clusterrulegroup
      operationId: handleDeleteClusterRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified clusterrulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/errors.Error'
    patch:
      consumes:
        - application/json
        - application/merge-patch+json
        - application/json-patch+json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Patch the clusterrulegroup
      operationId: handlePatchClusterRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified clusterrulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.ClusterRuleGroup'
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/namespaces/{namespace}/alerts:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the alerts in the specified namespace
      operationId: handleListAlerts
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, one of `activeAt`. e.g. orderBy=activeAt
          name: sortBy
          in: query
        - type: string
          description: state, one of `firing`, `pending`
          name: state
          in: query
        - type: string
          format: key=%s,key~%s
          description: label filters, concatenating multiple filters with commas, equal symbol for exact query, wave symbol for fuzzy query e.g. name~a
          name: label_filters
          in: query
        - type: string
          description: label matcher to match alert labels, follow prometheus matcher format. e.g. `{label_name1="valueA",label_name2=~"valueB|valueC"}`
          name: label_matcher
          in: query
        - type: string
          description: keyword to search alerts
          name: keyword
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.Alert%5D'
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/namespaces/{namespace}/rulegroups:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the rulegroups in the specified namespace
      operationId: handleListRuleGroups
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          description: name used to do filtering
          name: name
          in: query
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, e.g. orderBy=createTime
          name: sortBy
          in: query
        - type: string
          description: filter rule groups which contain rules in specified state, one of `firing`, `pending`, `inactive`, `disabled`
          name: state
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.RuleGroup%5D'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Create a rulegroup in the spefified namespace
      operationId: handleCreateRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
  /alerting.kubesphere.io/v2beta1/clusters/{cluster}/namespaces/{namespace}/rulegroups/{name}:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: get the rulegroup with the specified name in the specified namespace
      operationId: handleGetRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          description: The specified rulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Update the rulegroup with the specified name in the specified namespace
      operationId: handleUpdateRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          description: The specified rulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Delete the rulegroup with the specified name in the specified namespace
      operationId: handleDeleteRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          description: The specified rulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/errors.Error'
    patch:
      consumes:
        - application/json
        - application/merge-patch+json
        - application/json-patch+json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Patch the rulegroup with the specified name in the specified namespace
      operationId: handlePatchRuleGroup
      parameters:
        - type: string
          description: The specified cluster.
          name: cluster
          in: path
          required: true
        - type: string
          description: The specified namespace.
          name: namespace
          in: path
          required: true
        - type: string
          description: The specified rulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.RuleGroup'
  /alerting.kubesphere.io/v2beta1/globalalerts:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the alerts of globalrulegroups
      operationId: handleListGlobalAlerts
      parameters:
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, one of `activeAt`. e.g. orderBy=activeAt
          name: sortBy
          in: query
        - type: string
          description: state, one of `firing`, `pending`
          name: state
          in: query
        - type: string
          format: key=%s,key~%s
          description: label filters, concatenating multiple filters with commas, equal symbol for exact query, wave symbol for fuzzy query e.g. name~a
          name: label_filters
          in: query
        - type: string
          description: label matcher to match alert labels, follow prometheus matcher format. e.g. `{label_name1="valueA",label_name2=~"valueB|valueC"}`
          name: label_matcher
          in: query
        - type: string
          description: filter alerts, `true` for alerts from built-in rule groups and `false` for alerts from custom rule groups
          name: builtin
          in: query
        - type: string
          description: keyword to search alerts
          name: keyword
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.Alert%5D'
  /alerting.kubesphere.io/v2beta1/globalrulegroups:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: list the globalrulegroups
      operationId: handleListGlobalRuleGroups
      parameters:
        - type: string
          description: name used to do filtering
          name: name
          in: query
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. reverse=true
          name: ascending
          in: query
        - type: string
          description: sort parameters, e.g. orderBy=createTime
          name: sortBy
          in: query
        - type: string
          description: filter rule groups which contain rules in specified state, one of `firing`, `pending`, `inactive`, `disabled`
          name: state
          in: query
        - type: string
          description: filter rule groups, `true` for built-in rule groups and `false` for custom rule groups
          name: builtin
          in: query
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult%5Bv2beta1.GlobalRuleGroup%5D'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Create a globalrulegroup
      operationId: handleCreateGlobalRuleGroup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
  /alerting.kubesphere.io/v2beta1/globalrulegroups/{name}:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: get the globalrulegroup with the specified name
      operationId: handleGetGlobalRuleGroup
      parameters:
        - type: string
          description: The specified globalrulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
    put:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Update the globalrulegroup
      operationId: handleUpdateGlobalRuleGroup
      parameters:
        - type: string
          description: The specified globalrulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
    delete:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Delete the globalrulegroup
      operationId: handleDeleteGlobalRuleGroup
      parameters:
        - type: string
          description: The specified globalrulegroup name.
          name: name
          in: path
          required: true
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/errors.Error'
    patch:
      consumes:
        - application/json
        - application/merge-patch+json
        - application/json-patch+json
      produces:
        - application/json
      tags:
        - Alerting Management
      summary: Patch the globalrulegroup
      operationId: handlePatchGlobalRuleGroup
      parameters:
        - type: string
          description: The specified globalrulegroup name.
          name: name
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/v2beta1.GlobalRuleGroup'
definitions:
  api.ListResult[v2beta1.Alert]:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v2beta1.Alert'
      totalItems:
        type: integer
        format: int32
  api.ListResult[v2beta1.ClusterRuleGroup]:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v2beta1.ClusterRuleGroup'
      totalItems:
        type: integer
        format: int32
  api.ListResult[v2beta1.GlobalRuleGroup]:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v2beta1.GlobalRuleGroup'
      totalItems:
        type: integer
        format: int32
  api.ListResult[v2beta1.RuleGroup]:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v2beta1.RuleGroup'
      totalItems:
        type: integer
        format: int32
  apis_v2beta1.ClusterRule:
    required:
      - alert
    properties:
      alert:
        type: string
      annotations:
        type: object
        additionalProperties:
          type: string
      disable:
        type: boolean
      expr:
        $ref: '#/definitions/intstr.IntOrString'
      exprBuilder:
        $ref: '#/definitions/apis_v2beta1.ClusterRuleExprBuilder'
      for:
        type: string
      id:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      severity:
        type: string
  apis_v2beta1.ClusterRuleExprBuilder:
    properties:
      node:
        $ref: '#/definitions/apis_v2beta1.NodeExprBuilder'
  apis_v2beta1.ClusterRuleGroupSpec:
    required:
      - rules
    properties:
      interval:
        type: string
      partial_response_strategy:
        type: string
      rules:
        type: array
        items:
          $ref: '#/definitions/apis_v2beta1.ClusterRule'
  apis_v2beta1.ClusterRuleGroupStatus: {}
  apis_v2beta1.GlobalRule:
    required:
      - alert
    properties:
      alert:
        type: string
      annotations:
        type: object
        additionalProperties:
          type: string
      clusterSelector:
        $ref: '#/definitions/apis_v2beta1.MetricLabelSelector'
      disable:
        type: boolean
      expr:
        $ref: '#/definitions/intstr.IntOrString'
      exprBuilder:
        $ref: '#/definitions/apis_v2beta1.GlobalRuleExprBuilder'
      for:
        type: string
      id:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      namespaceSelector:
        $ref: '#/definitions/apis_v2beta1.MetricLabelSelector'
      severity:
        type: string
  apis_v2beta1.GlobalRuleExprBuilder:
    properties:
      node:
        $ref: '#/definitions/apis_v2beta1.ScopedNodeExprBuilder'
      workload:
        $ref: '#/definitions/apis_v2beta1.ScopedWorkloadExprBuilder'
  apis_v2beta1.GlobalRuleGroupSpec:
    required:
      - rules
    properties:
      interval:
        type: string
      partial_response_strategy:
        type: string
      rules:
        type: array
        items:
          $ref: '#/definitions/apis_v2beta1.GlobalRule'
  apis_v2beta1.GlobalRuleGroupStatus: {}
  apis_v2beta1.Matcher:
    required:
      - type
    properties:
      type:
        type: string
      value:
        type: string
  apis_v2beta1.MetricLabelSelector:
    properties:
      inValues:
        type: array
        items:
          type: string
      matcher:
        $ref: '#/definitions/apis_v2beta1.Matcher'
  apis_v2beta1.NamespaceRule:
    required:
      - alert
    properties:
      alert:
        type: string
      annotations:
        type: object
        additionalProperties:
          type: string
      disable:
        type: boolean
      expr:
        $ref: '#/definitions/intstr.IntOrString'
      exprBuilder:
        $ref: '#/definitions/apis_v2beta1.NamespaceRuleExprBuilder'
      for:
        type: string
      id:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      severity:
        type: string
  apis_v2beta1.NamespaceRuleExprBuilder:
    properties:
      workload:
        $ref: '#/definitions/apis_v2beta1.WorkloadExprBuilder'
  apis_v2beta1.NodeCpuThreshold:
    properties:
      load15m:
        type: number
        format: double
      load1m:
        type: number
        format: double
      load5m:
        type: number
        format: double
      utilization:
        type: number
        format: double
  apis_v2beta1.NodeDiskThreshold:
    properties:
      inodeUtilization:
        type: number
        format: double
      iopsRead:
        type: number
        format: double
      iopsWrite:
        type: number
        format: double
      spaceAvailable:
        type: number
        format: double
      spaceUtilization:
        type: number
        format: double
      throughputRead:
        type: number
        format: double
      throughputWrite:
        type: number
        format: double
  apis_v2beta1.NodeExprBuilder:
    required:
      - names
      - comparator
      - metricThreshold
    properties:
      comparator:
        type: string
      metricThreshold:
        $ref: '#/definitions/apis_v2beta1.NodeMetricThreshold'
      names:
        type: array
        items:
          type: string
  apis_v2beta1.NodeMemoryThreshold:
    properties:
      available:
        type: number
        format: double
      utilization:
        type: number
        format: double
  apis_v2beta1.NodeMetricThreshold:
    properties:
      cpu:
        $ref: '#/definitions/apis_v2beta1.NodeCpuThreshold'
      disk:
        $ref: '#/definitions/apis_v2beta1.NodeDiskThreshold'
      memory:
        $ref: '#/definitions/apis_v2beta1.NodeMemoryThreshold'
      network:
        $ref: '#/definitions/apis_v2beta1.NodeNetworkThreshold'
      pod:
        $ref: '#/definitions/apis_v2beta1.NodePodThreshold'
  apis_v2beta1.NodeNetworkThreshold:
    properties:
      receivedRate:
        type: number
        format: double
      transmittedRate:
        type: number
        format: double
  apis_v2beta1.NodePodThreshold:
    properties:
      abnormalRatio:
        type: number
        format: double
      utilization:
        type: number
        format: double
  apis_v2beta1.RuleGroupSpec:
    required:
      - rules
    properties:
      interval:
        type: string
      partial_response_strategy:
        type: string
      rules:
        type: array
        items:
          $ref: '#/definitions/apis_v2beta1.NamespaceRule'
  apis_v2beta1.RuleGroupStatus: {}
  apis_v2beta1.ScopedNodeExprBuilder:
    required:
      - names
      - comparator
    properties:
      comparator:
        type: string
      metricThreshold:
        $ref: '#/definitions/apis_v2beta1.NodeMetricThreshold'
      names:
        type: array
        items:
          $ref: '#/definitions/apis_v2beta1.ScopedNodeNames'
  apis_v2beta1.ScopedNodeNames:
    required:
      - cluster
      - names
    properties:
      cluster:
        type: string
      names:
        type: array
        items:
          type: string
  apis_v2beta1.ScopedWorkloadExprBuilder:
    required:
      - kind
      - names
      - comparator
    properties:
      comparator:
        type: string
      kind:
        type: string
      metricThreshold:
        $ref: '#/definitions/apis_v2beta1.WorkloadMetricThreshold'
      names:
        type: array
        items:
          $ref: '#/definitions/apis_v2beta1.ScopedWorkloadNames'
  apis_v2beta1.ScopedWorkloadNames:
    required:
      - cluster
      - namespace
      - names
    properties:
      cluster:
        type: string
      names:
        type: array
        items:
          type: string
      namespace:
        type: string
  apis_v2beta1.WorkloadCpuThreshold:
    properties:
      usage:
        type: number
        format: double
  apis_v2beta1.WorkloadExprBuilder:
    required:
      - kind
      - names
      - comparator
    properties:
      comparator:
        type: string
      kind:
        type: string
      metricThreshold:
        $ref: '#/definitions/apis_v2beta1.WorkloadMetricThreshold'
      names:
        type: array
        items:
          type: string
  apis_v2beta1.WorkloadMemoryThreshold:
    properties:
      usage:
        type: number
        format: double
      usageWoCache:
        type: number
        format: double
  apis_v2beta1.WorkloadMetricThreshold:
    properties:
      cpu:
        $ref: '#/definitions/apis_v2beta1.WorkloadCpuThreshold'
      memory:
        $ref: '#/definitions/apis_v2beta1.WorkloadMemoryThreshold'
      network:
        $ref: '#/definitions/apis_v2beta1.WorkloadNetworkThreshold'
      replica:
        $ref: '#/definitions/apis_v2beta1.WorkloadReplicaThreshold'
  apis_v2beta1.WorkloadNetworkThreshold:
    properties:
      receivedRate:
        type: number
        format: double
      transmittedRate:
        type: number
        format: double
  apis_v2beta1.WorkloadReplicaThreshold:
    properties:
      unavailableRatio:
        type: number
        format: double
  errors.Error:
    required:
      - message
    properties:
      message:
        description: error message
        type: string
  intstr.IntOrString:
    required:
      - Type
      - IntVal
      - StrVal
    properties:
      IntVal:
        type: integer
        format: int32
      StrVal:
        type: string
      Type:
        type: integer
        format: int64
  v1.FieldsV1:
    description: |-
      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

      The exact format is defined in sigs.k8s.io/structured-merge-diff
  v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        $ref: '#/definitions/v1.FieldsV1'
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
        type: string
      time:
        description: Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
        $ref: '#/definitions/v1.Time'
  v1.ObjectMeta:
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    properties:
      annotations:
        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations'
        type: object
        additionalProperties:
          type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/v1.Time'
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
        type: integer
        format: int64
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/v1.Time'
      finalizers:
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
        type: array
        items:
          type: string
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
        type: integer
        format: int64
      labels:
        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels'
        type: object
        additionalProperties:
          type: string
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
        type: array
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
      name:
        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        type: array
        items:
          $ref: '#/definitions/v1.OwnerReference'
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
        type: string
  v1.OwnerReference:
    description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
    required:
      - apiVersion
      - kind
      - name
      - uid
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
        type: string
      uid:
        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
        type: string
  v1.Time: {}
  v2beta1.Alert:
    properties:
      activeAt:
        description: time when this alert became active
        type: string
        format: date-time
      annotations:
        description: annotations
        type: object
        additionalProperties:
          type: string
      labels:
        description: labels
        type: object
        additionalProperties:
          type: string
      state:
        description: state
        type: string
      value:
        description: the value from the last expression evaluation
        type: string
  v2beta1.ClusterRuleGroup:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/apis_v2beta1.ClusterRuleGroupSpec'
      status:
        $ref: '#/definitions/v2beta1.RuleGroupStatus'
  v2beta1.GlobalRuleGroup:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/apis_v2beta1.GlobalRuleGroupSpec'
      status:
        $ref: '#/definitions/v2beta1.RuleGroupStatus'
  v2beta1.RuleGroup:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/apis_v2beta1.RuleGroupSpec'
      status:
        $ref: '#/definitions/v2beta1.RuleGroupStatus'
  v2beta1.RuleGroupStatus:
    properties:
      evaluationTime:
        description: time spent on rule group evaluation in seconds
        type: number
        format: double
      lastEvaluation:
        description: time of last evaluation
        type: string
        format: date-time
      rulesStats:
        description: statistics of rules in one RuleGroup
        $ref: '#/definitions/v2beta1.RulesStats'
      rulesStatus:
        description: status of rules in one RuleGroup
        type: array
        items:
          $ref: '#/definitions/v2beta1.RuleStatus'
  v2beta1.RuleStatus:
    properties:
      activeAt:
        description: time when this rule became active
        type: string
        format: date-time
      alerts:
        description: alerts
        type: array
        items:
          $ref: '#/definitions/v2beta1.Alert'
      evaluationTime:
        description: time spent on the expression evaluation in seconds
        type: number
        format: double
      expr:
        description: expression evaluated, for global rules only
        type: string
      health:
        description: health state of a rule, one of ok, err, unknown depending on the last execution result
        type: string
      lastError:
        description: error of the last evaluation
        type: string
      lastEvaluation:
        description: time of last evaluation
        type: string
        format: date-time
      state:
        description: state of a rule, one of firing, pending, inactive or disabled depending on the rule and its alerts
        type: string
  v2beta1.RulesStats:
    required:
      - inactive
      - pending
      - firing
      - disabled
    properties:
      disabled:
        description: count of disabled rules
        type: integer
        format: int32
      firing:
        description: count of rules in the firing state
        type: integer
        format: int32
      inactive:
        description: count of rules in the inactive state
        type: integer
        format: int32
      pending:
        description: count of rules in the pending state
        type: integer
        format: int32
securityDefinitions:
  BearerToken:
    description: Bearer Token Authentication
    type: apiKey
    name: Authorization
    in: header
security:
  - BearerToken: []
tags:
  - name: Alerting Management
