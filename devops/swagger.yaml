swagger: '2.0'
info:
  description: KubeSphere DevOps OpenAPI
  title: KubeSphere DevOps
  contact:
    name: KubeSphere
    url: https://kubesphere.com.cn
    email: support@kubesphere.cloud
  version: v4.1.2
paths:
  /kapis/devops.kubesphere.io/v1alpha2/crumbissuer:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get crumb issuer. A CrumbIssuer represents an algorithm to generate a nonce value, known as a crumb, to counter cross site request forgery exploits. Crumbs are typically hashes incorporating information that uniquely identifies an agent that sends a request, along with a guarded secret so that the crumb value cannot be forged by a third party.
      operationId: GetCrumb
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.Crumb'
  /kapis/devops.kubesphere.io/v1alpha2/jenkins/{path}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Jenkins
      operationId: func1
      parameters:
        - pattern: '.*'
          type: string
          description: Path stands for any suffix path.
          name: path
          in: path
          required: true
      responses:
        '200':
          description: ok
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/checkCron:
    post:
      produces:
        - application/json
        - charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Check cron script compile.
      operationId: CheckCron
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.CronData'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.CheckCronRes'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/credentials/{credential}/usage:
    get:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: Get the specified credential usage of the DevOps project
      operationId: GetProjectCredentialUsage
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: credential's ID, e.g. dockerhub-id
          name: credential
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.Credential'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/jenkins/{path}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Jenkins
      operationId: proxyWithDevOps
      parameters:
        - pattern: '.*'
          type: string
          description: Path stands for any suffix path.
          name: path
          in: path
          required: true
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
      responses:
        '200':
          description: ok
    post:
      produces:
        - application/json
      tags:
        - DevOps Jenkins
      operationId: proxyWithDevOps
      parameters:
        - pattern: '.*'
          type: string
          description: Path stands for any suffix path.
          name: path
          in: path
          required: true
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
      responses:
        '200':
          description: ok
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get the specified pipeline of the DevOps project
      operationId: GetPipeline
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.Pipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get all branches in the specified pipeline.
      operationId: GetPipelineBranch
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          format: filter=%s
          description: filter remote scm. e.g. origin
          name: filter
          in: query
        - type: string
          format: start=%d
          default: start=0
          description: the count of branches start.
          name: start
          in: query
        - type: string
          format: limit=%d
          default: limit=100
          description: the count of branches limit.
          name: limit
          in: query
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.PipelineBranch'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get the specified branch pipeline of the DevOps project
      operationId: GetBranchPipeline
      parameters:
        - type: string
          description: the name of devops project
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch
          name: branch
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.BranchPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs:
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Run the specified pipeline of the DevOps project.
      operationId: RunBranchPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.RunPayload'
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.RunPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get details in the specified pipeline activity.
      operationId: GetBranchPipelineRun
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run id, the unique id for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.PipelineRun'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/artifacts:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get all artifacts generated from the specified run of the pipeline branch.
      operationId: GetBranchArtifacts
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: start=%d
          description: the item number that the search starts from.
          name: start
          in: query
        - type: string
          format: limit=%d
          description: the limit item count of the search.
          name: limit
          in: query
      responses:
        '200':
          description: The filed of "Url" in response can download artifacts
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.Artifacts'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/log:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get run logs of the specified pipeline activity.
      operationId: GetBranchRunLog
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: start=%d
          default: start=0
          description: the item number that the search starts from.
          name: start
          in: query
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/nodes:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get run nodes.
      operationId: GetBranchPipelineRunNodes
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run id, the unique id for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: limit=%d
          default: limit=10000
          description: the limit item count of the search.
          name: limit
          in: query
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.BranchPipelineRunNodes'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/nodes/{node}/steps:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get all steps in the specified node.
      operationId: GetBranchNodeSteps
      parameters:
        - type: string
          description: the name of devops project
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node ID, the stage in pipeline.
          name: node
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.NodeSteps'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/nodes/{node}/steps/{step}:
    post:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Proceed or Break the paused pipeline which waiting for user input.
      operationId: SubmitBranchInputStep
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node ID, the stage in pipeline.
          name: node
          in: path
          required: true
        - type: string
          description: pipeline step ID, the step in pipeline.
          name: step
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.CheckPlayload'
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/nodes/{node}/steps/{step}/log:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get the step logs in the specified pipeline activity.
      operationId: GetBranchStepLog
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run id, the unique id for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node id, the stage in pipeline.
          name: node
          in: path
          required: true
        - type: string
          description: pipeline step id, the step in pipeline.
          name: step
          in: path
          required: true
        - type: string
          format: start=%d
          default: start=0
          description: the item number that the search starts from.
          name: start
          in: query
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/nodesdetail:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Get steps details in an activity node. For a node, the steps which is defined inside the node.
      operationId: GetBranchNodesDetail
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.NodesDetail'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/replay:
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Replay the specified pipeline of the DevOps project
      operationId: ReplayBranchPipeline
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.ReplayPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/branches/{branch}/runs/{run}/stop:
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: (MultiBranchesPipeline) Stop the specified pipeline of the DevOps project.
      operationId: StopBranchPipeline
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: the name of branch, same as repository branch.
          name: branch
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: blocking=%t
          default: blocking=false
          description: stop and between each retries will sleep.
          name: blocking
          in: query
        - type: string
          format: timeOutInSecs=%d
          default: timeOutInSecs=10
          description: the time of stop and between each retries sleep.
          name: timeOutInSecs
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.StopPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/checkScriptCompile:
    post:
      consumes:
        - application/x-www-form-urlencoded
        - charset=utf-8
      produces:
        - application/json
        - charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Check pipeline script compile.
      operationId: CheckScriptCompile
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          format: pipeline=%s
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.ReqScript'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.CheckScript'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/consolelog:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Get scan reponsitory logs in the specified pipeline.
      operationId: GetConsoleLog
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get all runs of the specified pipeline
      operationId: ListPipelineRuns
      parameters:
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          format: start=%d
          description: the item number that the search starts from
          name: start
          in: query
        - type: string
          format: limit=%d
          description: the limit item count of the search
          name: limit
          in: query
        - type: string
          format: branch=%s
          description: the name of branch, same as repository branch, will be filtered by branch.
          name: branch
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.PipelineRunList'
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Run pipeline.
      operationId: RunPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.RunPayload'
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.RunPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get details in the specified pipeline activity.
      operationId: GetPipelineRun
      parameters:
        - type: string
          description: the name of devops project
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.PipelineRun'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/artifacts:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get all artifacts in the specified pipeline.
      operationId: GetArtifacts
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: start=%d
          description: the item number that the search starts from.
          name: start
          in: query
        - type: string
          format: limit=%d
          description: the limit item count of the search.
          name: limit
          in: query
      responses:
        '200':
          description: The filed of "Url" in response can download artifacts
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.Artifacts'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/log:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Get run logs of the specified pipeline activity.
      operationId: GetRunLog
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: start=%d
          default: start=0
          description: the item number that the search starts from.
          name: start
          in: query
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/nodes:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get all nodes in the specified activity. node is the stage in the pipeline task
      operationId: GetPipelineRunNodes
      parameters:
        - type: string
          description: the name of devops project
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.PipelineRunNodes'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get all steps in the specified node.
      operationId: GetNodeSteps
      parameters:
        - type: string
          description: the name of devops project
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node ID, the stage in pipeline.
          name: node
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.NodeSteps'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}:
    post:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Proceed or Break the paused pipeline which is waiting for user input.
      operationId: SubmitInputStep
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.CheckPlayload'
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node ID, the stage in pipeline.
          name: node
          in: path
          required: true
        - type: string
          description: pipeline step ID
          name: step
          in: path
          required: true
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Get pipelines step log.
      operationId: GetStepLog
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          description: pipeline node ID, the stage in pipeline.
          name: node
          in: path
          required: true
        - type: string
          description: pipeline step ID, the step in pipeline.
          name: step
          in: path
          required: true
        - type: string
          format: start=%d
          default: start=0
          description: the item number that the search starts from.
          name: start
          in: query
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/nodesdetail:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get steps details inside a activity node. For a node, the steps which defined inside the node.
      operationId: GetNodesDetail
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.NodesDetail'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/replay:
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Replay pipeline
      operationId: ReplayPipeline
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.ReplayPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/runs/{run}/stop:
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Stop pipeline
      operationId: StopPipeline
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: pipeline run ID, the unique ID for a pipeline once build.
          name: run
          in: path
          required: true
        - type: string
          format: blocking=%t
          default: blocking=false
          description: stop and between each retries will sleep.
          name: blocking
          in: query
        - type: string
          format: timeOutInSecs=%d
          default: timeOutInSecs=10
          description: the time of stop and between each retries sleep.
          name: timeOutInSecs
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.StopPipeline'
  /kapis/devops.kubesphere.io/v1alpha2/namespaces/{devops}/pipelines/{pipeline}/scan:
    post:
      produces:
        - text/html; charset=utf-8
      tags:
        - DevOps Pipeline
      summary: Scan remote Repository, Start a build if have new branch.
      operationId: ScanBranch
      parameters:
        - type: string
          description: DevOps project's ID, e.g. project-RRRRAzLBlLEm
          name: devops
          in: path
          required: true
        - type: string
          description: the name of the CI/CD pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          format: delay=%d
          description: the delay time to scan
          name: delay
          in: query
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/scms/{scm}/organizations:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all organizations of the specified source configuration management (SCM) such as Github.
      operationId: GetSCMOrg
      deprecated: true
      parameters:
        - type: string
          description: the ID of the source configuration management (SCM).
          name: scm
          in: path
          required: true
        - type: string
          format: credentialId=%s
          description: credential ID for source configuration management (SCM).
          name: credentialId
          in: query
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.SCMOrg'
  /kapis/devops.kubesphere.io/v1alpha2/scms/{scm}/organizations/{organization}/repositories:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all repositories in the specified organization.
      operationId: GetOrgRepo
      deprecated: true
      parameters:
        - type: string
          description: The ID of the source configuration management (SCM).
          name: scm
          in: path
          required: true
        - type: string
          description: organization ID, such as github username.
          name: organization
          in: path
          required: true
        - type: string
          format: credentialId=%s
          description: credential ID for SCM.
          name: credentialId
          in: query
          required: true
        - type: string
          format: pageNumber=%d
          description: page number.
          name: pageNumber
          in: query
          required: true
        - type: string
          format: pageSize=%d
          description: the item count of one page.
          name: pageSize
          in: query
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.OrgRepo'
  /kapis/devops.kubesphere.io/v1alpha2/scms/{scm}/servers:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all servers in the jenkins.
      operationId: GetSCMServers
      parameters:
        - type: string
          description: The ID of the source configuration management (SCM).
          name: scm
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/devops.SCMServer'
    post:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: Create scm server if it does not exist in the Jenkins.
      operationId: CreateSCMServers
      parameters:
        - type: string
          description: The ID of the source configuration management (SCM).
          name: scm
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.CreateScmServerReq'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.SCMServer'
  /kapis/devops.kubesphere.io/v1alpha2/scms/{scm}/verify:
    post:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: Validate the access token of the specified source configuration management (SCM) such as Github
      operationId: Validate
      parameters:
        - type: string
          description: the ID of the source configuration management (SCM).
          name: scm
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.Validates'
  /kapis/devops.kubesphere.io/v1alpha2/search:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: 'Search DevOps resource. More info: https://github.com/jenkinsci/blueocean-plugin/tree/master/blueocean-rest#get-pipelines-across-organization'
      operationId: ListPipelines
      parameters:
        - type: string
          format: q=%s
          description: query pipelines, condition for filtering.
          name: q
          in: query
          required: true
        - type: string
          format: filter=%s
          description: Filter some types of jobs. e.g. no-folder，will not get a job of type folder
          name: filter
          in: query
        - type: string
          format: start=%d
          description: the item number that the search starts from.
          name: start
          in: query
        - type: string
          format: limit=%d
          description: the limit item count of the search.
          name: limit
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/devops.PipelineList'
  /kapis/devops.kubesphere.io/v1alpha2/webhook/generic-trigger:
    post:
      consumes:
        - application/x-www-form-urlencoded
        - application/json
      produces:
        - application/json
      tags:
        - DevOps Webhook
      summary: This is a generic webhook trigger. Currently, it support Jenkins only.
      operationId: genericWebhook
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/webhook/git:
    get:
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Webhook
      summary: Get commit notification by HTTP GET method. Git webhook will request here.
      operationId: GetNotifyCommit
      parameters:
        - type: string
          format: url=%s
          description: Git url
          name: url
          in: query
          required: true
      responses:
        '200':
          description: OK
    post:
      consumes:
        - application/json
      produces:
        - text/plain; charset=utf-8
      tags:
        - DevOps Webhook
      summary: Get commit notification by HTTP POST method. Git webhook will request here.
      operationId: PostNotifyCommit
      parameters:
        - type: string
          format: url=%s
          description: Git url
          name: url
          in: query
          required: true
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha2/webhook/github:
    post:
      consumes:
        - application/x-www-form-urlencoded
        - application/json
      produces:
        - application/json
      tags:
        - DevOps Webhook
      summary: Get commit notification. Github webhook will request here.
      operationId: GithubWebhook
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha3/ci/nodelabels:
    get:
      produces:
        - application/json
      tags:
        - DevOps Jenkins
      summary: Get the all labels of the Jenkins
      operationId: getJenkinsLabels
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.GenericArrayResponse'
  /kapis/devops.kubesphere.io/v1alpha3/clustersteptemplates:
    get:
      produces:
        - application/json
      tags:
        - DevOps StepTemplate
      summary: Return the cluster level stepTemplate list
      operationId: clusterStepTemplates
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha3/clustersteptemplates/{clustersteptemplate}:
    get:
      produces:
        - application/json
      tags:
        - DevOps StepTemplate
      summary: Return a specific ClusterStepTemplate
      operationId: getClusterStepTemplate
      parameters:
        - type: string
          description: The name of clustersteptemplate
          name: clustersteptemplate
          in: path
          required: true
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha3/clustersteptemplates/{clustersteptemplate}/render:
    post:
      produces:
        - application/json
      tags:
        - DevOps StepTemplate
      summary: Render a specific ClusterStepTemplate, then return it
      operationId: renderClusterStepTemplate
      parameters:
        - type: string
          description: The name of clustersteptemplate
          name: clustersteptemplate
          in: path
          required: true
        - type: string
          description: The name of a secret
          name: secret
          in: query
        - type: string
          description: The namespace of a secret
          name: secretNamespace
          in: query
        - description: The parameters of the ClusterStepTemplate
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/map%5Bstring%5Dstring'
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha3/clustertemplates:
    get:
      produces:
        - application/json
      tags:
        - DevOps ClusterTemplate
      summary: Query cluster templates.
      operationId: handleQueryClusterTemplates
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/template.PageResult'
  /kapis/devops.kubesphere.io/v1alpha3/clustertemplates/{clustertemplate}/render:
    post:
      produces:
        - application/json
      tags:
        - DevOps ClusterTemplate
      summary: Render cluster template.
      operationId: handleRenderClusterTemplate
      parameters:
        - type: string
          description: Name of ClusterTemplate.
          name: clustertemplate
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/template.RenderBody'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.ClusterTemplate'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials:
    get:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: list the credentials of the specified devops for the current user
      operationId: ListCredential
      parameters:
        - type: string
          description: devops name
          name: devops
          in: path
          required: true
        - type: string
          description: name used to do filtering
          name: name
          in: query
        - type: string
          format: page=%d
          default: page=1
          description: page
          name: page
          in: query
        - type: string
          description: limit
          name: limit
          in: query
        - type: string
          default: ascending=false
          description: sort parameters, e.g. ascending=false
          name: ascending
          in: query
        - type: string
          description: sort parameters, e.g. orderBy=createTime
          name: sortBy
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult'
    post:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: create the credential of the specified devops for the current user
      operationId: CreateCredential
      parameters:
        - type: string
          description: devops name
          name: devops
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1.Secret'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1.Secret'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/credentials/{credential}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: get the credential of the specified devops for the current user
      operationId: GetCredential
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: pipeline name
          name: credential
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1.Secret'
    put:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: put the credential of the specified devops for the current user
      operationId: UpdateCredential
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: credential name
          name: credential
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1.Secret'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1.Secret'
    delete:
      produces:
        - application/json
      tags:
        - DevOps Credential
      summary: delete the credential of the specified devops for the current user
      operationId: DeleteCredential
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: credential name
          name: credential
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1.Secret'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/pipelines:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: list the pipelines of the specified devops for the current user
      operationId: ListPipeline
      parameters:
        - type: string
          description: devops name
          name: devops
          in: path
          required: true
        - type: string
          format: limit=%d,page=%d
          default: limit=10,page=1
          description: paging query, e.g. limit=100,page=1
          name: paging
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult'
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: create the pipeline of the specified devops for the current user
      operationId: CreatePipeline
      parameters:
        - type: string
          description: devops name
          name: devops
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.Pipeline'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Pipeline'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/pipelines/{pipeline}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: get the pipeline of the specified devops for the current user
      operationId: getPipelineByName
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: pipeline name
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Pipeline'
    put:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: put the pipeline of the specified devops for the current user
      operationId: UpdatePipeline
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: pipeline name
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Pipeline'
    delete:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: delete the pipeline of the specified devops for the current user
      operationId: DeletePipeline
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: pipeline name
          name: pipeline
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Pipeline'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/pipelines/{pipeline}/jenkinsfile:
    put:
      produces:
        - application/json
      tags:
        - DevOps Jenkins
      summary: Update the Jenkinsfile of a Pipeline
      operationId: UpdateJenkinsfile
      parameters:
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: pipeline name
          name: pipeline
          in: path
          required: true
        - type: string
          description: the mode(json or raw) that you expect to update the Jenkinsfile
          name: mode
          in: query
        - description: The Jenkinsfile content should be in the 'data' field
          name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.GenericPayload'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.GenericResponse'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/templates:
    get:
      produces:
        - application/json
      tags:
        - DevOps Template
      summary: Query templates for a DevOps Project.
      operationId: handleQuery
      parameters:
        - type: string
          description: DevOps project name
          name: devops
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/template.PageResult'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/templates/{template}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Template
      summary: Get template
      operationId: handleGetTemplate
      parameters:
        - type: string
          description: DevOps project name
          name: devops
          in: path
          required: true
        - type: string
          description: Template name
          name: template
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Template'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{devops}/templates/{template}/render:
    post:
      produces:
        - application/json
      tags:
        - DevOps Template
      summary: Render template and return render result into annotations (devops.kubesphere.io//render-result) inside template
      operationId: handleRenderTemplate
      parameters:
        - type: string
          description: DevOps project name
          name: devops
          in: path
          required: true
        - type: string
          description: Template name
          name: template
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/template.RenderBody'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.Template'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/gitrepositories:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all the GitRepositories
      operationId: listGitRepositories
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: Which page you want to query. Default value is 1
          name: page
          in: query
        - type: string
          description: Which size per page you want to query. Default value is 10
          name: limit
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/scm.GitRepositoryPageResult'
    post:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all the GitRepositories
      operationId: createGitRepositories
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.GitRepository'
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/v1alpha3.GitRepository'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/gitrepositories/{gitrepository}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: Get a GitRepository by name
      operationId: getGitRepository
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The GitRepository customs resource
          name: gitrepository
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.GitRepository'
    put:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: Update a GitRepositories
      operationId: updateGitRepositories
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The GitRepository customs resource
          name: gitrepository
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.GitRepository'
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/v1alpha3.GitRepository'
    delete:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: Delete a GitRepository by name
      operationId: deleteGitRepositories
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The GitRepository customs resource
          name: gitrepository
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.GitRepository'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelineruns/{pipelinerun}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get a PipelineRun for a specified pipeline
      operationId: getPipelineRun
      parameters:
        - type: string
          description: Namespace of the PipelineRun
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the PipelineRun
          name: pipelinerun
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.PipelineRun'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelineruns/{pipelinerun}/artifacts/download:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      operationId: downloadArtifact
      parameters:
        - type: string
          description: Namespace of the PipelineRun
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the PipelineRun
          name: pipelinerun
          in: path
          required: true
        - type: string
          description: artifact filename. e.g. artifact:v1.0.1
          name: filename
          in: query
      responses:
        '200':
          description: ok
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelineruns/{pipelinerun}/nodedetails:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get node details including steps and approvable for a given Pipeline
      operationId: getNodeDetails
      parameters:
        - type: string
          description: Namespace of the PipelineRun
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the PipelineRun
          name: pipelinerun
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/pipelinerun.NodeDetail'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelines/{pipeline}/branches:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Paging query branches of multi branch Pipeline
      operationId: getBranches
      parameters:
        - type: string
          description: Namespace of the Pipeline
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the Pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: 'Pipeline filter, allowed values: origin, pull_requests and no-folders'
          name: filter
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelines/{pipeline}/branches/{branch}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Paging query branches of multi branch Pipeline
      operationId: getBranch
      parameters:
        - type: string
          description: Namespace of the Pipeline
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the Pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: Name of branch, tag or pull request
          name: branch
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/pipeline.Branch'
  /kapis/devops.kubesphere.io/v1alpha3/namespaces/{namespace}/pipelines/{pipeline}/pipelineruns:
    get:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Get all runs of the specified pipeline
      operationId: listPipelineRuns
      parameters:
        - type: string
          description: Namespace of the pipeline
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: The name of SCM reference
          name: branch
          in: query
        - type: boolean
          default: true
          description: Backward compatibility for v1alpha2 API `/devops/{devops}/pipelines/{pipeline}/runs`. By default, the backward is true. If you want to list full data of PipelineRuns, just set the parameters to false.
          name: backward
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.PipelineRunList'
    post:
      produces:
        - application/json
      tags:
        - DevOps Pipeline
      summary: Create a PipelineRun for the specified pipeline
      operationId: createPipelineRun
      parameters:
        - type: string
          description: Namespace of the pipeline
          name: namespace
          in: path
          required: true
        - type: string
          description: Name of the pipeline
          name: pipeline
          in: path
          required: true
        - type: string
          description: The name of SCM reference, only for multi-branch pipeline
          name: branch
          in: query
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/devops.RunPayload'
      responses:
        '201':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.PipelineRun'
  /kapis/devops.kubesphere.io/v1alpha3/scms/{scm}/organizations:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all the readable organizations
      operationId: listOrganizations
      parameters:
        - type: string
          description: the SCM type
          name: scm
          in: path
          required: true
        - type: string
          description: The address of a self-hosted scm provider
          name: server
          in: query
        - type: string
          description: the secret name
          name: secret
          in: query
          required: true
        - type: string
          description: the namespace of target secret
          name: secretNamespace
          in: query
          required: true
        - type: boolean
          default: true
          description: Indicate if you want to include the current user
          name: includeUser
          in: query
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/scm.organization'
  /kapis/devops.kubesphere.io/v1alpha3/scms/{scm}/organizations/{organization}/repositories:
    get:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: List all the readable Repositories
      operationId: listRepositories
      parameters:
        - type: string
          description: the SCM type
          name: scm
          in: path
          required: true
        - type: string
          description: The address of a self-hosted scm provider
          name: server
          in: query
        - type: string
          description: 'The git provider organization. For a GitHub repository address: https://github.com/kubesphere/ks-devops. kubesphere is the organization name'
          name: organization
          in: path
          required: true
        - type: string
          description: the secret name
          name: secret
          in: query
          required: true
        - type: string
          description: the namespace of target secret
          name: secretNamespace
          in: query
          required: true
        - type: integer
          description: The number of paging
          name: pageNumber
          in: query
        - type: integer
          description: The size of each paging data
          name: pageSize
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/scm.repositoryListResult'
  /kapis/devops.kubesphere.io/v1alpha3/scms/{scm}/verify:
    post:
      produces:
        - application/json
      tags:
        - DevOps Scm
      summary: verify the token of different git providers
      operationId: verify
      parameters:
        - type: string
          description: the SCM type
          name: scm
          in: path
          required: true
        - type: string
          description: The address of a self-hosted scm provider
          name: server
          in: query
        - type: string
          description: the secret name
          name: secret
          in: query
          required: true
        - type: string
          description: the namespace of target secret
          name: secretNamespace
          in: query
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/git.VerifyResponse'
  /kapis/devops.kubesphere.io/v1alpha3/webhooks/jenkins:
    post:
      produces:
        - application/json
      tags:
        - DevOps Webhook
      summary: Webhook for receiving events from Jenkins
      operationId: ReceiveEventsFromJenkins
      responses:
        '200':
          description: ok
  /kapis/devops.kubesphere.io/v1alpha3/webhooks/scm:
    post:
      produces:
        - application/json
      tags:
        - DevOps Webhook
      operationId: scmWebhook
      responses:
        '200':
          description: OK
  /kapis/devops.kubesphere.io/v1alpha3/workspaces/{workspace}/namespaces:
    get:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: List the devopsproject of the specified workspace for the current user
      operationId: ListDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - type: string
          format: limit=%d,page=%d
          default: limit=10,page=1
          description: paging query, e.g. limit=100,page=1
          name: paging
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult'
    post:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: Create the devopsproject of the specified workspace for the current user
      operationId: CreateDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
  /kapis/devops.kubesphere.io/v1alpha3/workspaces/{workspace}/namespaces/{devops}:
    get:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: Get the devops project of the specified workspace for the current user
      operationId: GetDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - type: string
          description: use '{devops}` as a generatName if 'generateName=true', or as a regular name
          name: generateName
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
    put:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: Put the devopsproject of the specified workspace for the current user
      operationId: UpdateDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - type: string
          description: project name
          name: devops
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
    delete:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: Get the devopsproject of the specified workspace for the current user
      operationId: DeleteDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - type: string
          description: project name
          name: devops
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha3.DevOpsProject'
  /kapis/devops.kubesphere.io/v1alpha3/workspaces/{workspace}/workspacemembers/{workspacemember}/namespaces:
    get:
      produces:
        - application/json
      tags:
        - DevOps Project
      summary: List the devopsproject of the specified workspace for the current user
      operationId: ListDevOpsProject
      parameters:
        - type: string
          description: workspace name
          name: workspace
          in: path
          required: true
        - type: string
          description: workspace member name
          name: workspacemember
          in: path
          required: true
        - type: string
          format: limit=%d,page=%d
          default: limit=10,page=1
          description: paging query, e.g. limit=100,page=1
          name: paging
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/api.ListResult'
  /kapis/gitops.kubesphere.io/v1alpha1/clusters:
    get:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Get the clusters list
      operationId: getClusters
      responses:
        '200':
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/v1alpha1.ApplicationDestination'
  /kapis/gitops.kubesphere.io/v1alpha1/namespaces/{namespace}/application-summary:
    get:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Fetch applications summary
      operationId: applicationSummary
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/argocd.ApplicationsSummary'
  /kapis/gitops.kubesphere.io/v1alpha1/namespaces/{namespace}/applications:
    get:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Search applications
      operationId: ApplicationList
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: Which page you want to query. Default value is 1
          name: page
          in: query
        - type: string
          description: Which size per page you want to query. Default value is 10
          name: limit
          in: query
        - type: string
          description: Filter by name, containing match pattern
          name: name
          in: query
        - type: string
          description: Order by field. Default value is "creationTimestamp"
          name: sortBy
          in: query
        - type: string
          description: Sort order. Default is false(descending)
          name: ascending
          in: query
        - type: string
          description: 'Filter by sync status. Available values: "Unknown", "Synced" and "OutOfSync"'
          name: syncStatus
          in: query
        - type: string
          description: 'Filter by health status. Available values: "Unknown", "Progressing", "Healthy", "Suspended", "Degraded" and "Missing"'
          name: healthStatus
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/argocd.ApplicationPageResult'
    post:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Create an application
      operationId: createApplication
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha1.Application'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha1.Application'
  /kapis/gitops.kubesphere.io/v1alpha1/namespaces/{namespace}/applications/{application}:
    get:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Get a particular application
      operationId: GetApplication
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The application name
          name: application
          in: path
          required: true
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha1.Application'
    put:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Update a particular application
      operationId: UpdateApplication
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The application name
          name: application
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1alpha1.Application'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha1.Application'
    delete:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Delete a particular application
      operationId: DelApplication
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The application name
          name: application
          in: path
          required: true
        - type: boolean
          default: false
          description: Delete both the app and its resources, rather than only the application if cascade is true
          name: cascade
          in: query
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha1.Application'
  /kapis/gitops.kubesphere.io/v1alpha1/namespaces/{namespace}/applications/{application}/sync:
    post:
      produces:
        - application/json
      tags:
        - GitOps
      summary: Sync a particular application manually
      operationId: handleSyncApplication
      parameters:
        - type: string
          description: The namespace name
          name: namespace
          in: path
          required: true
        - type: string
          description: The application name
          name: application
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/argocd.ApplicationSyncRequest'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/v1alpha1.Application'
definitions:
  ._links:
    properties:
      actions:
        $ref: '#/definitions/.actions'
      branches:
        $ref: '#/definitions/.branches'
      queue:
        $ref: '#/definitions/.queue'
      runs:
        $ref: '#/definitions/.runs'
      scm:
        $ref: '#/definitions/.scm'
      self:
        $ref: '#/definitions/.self'
      trends:
        $ref: '#/definitions/.trends'
  .actions:
    properties:
      _class:
        type: string
      href:
        type: string
  .branch:
    properties:
      isPrimary:
        description: primary or not
        type: boolean
      issues:
        description: issues
        type: array
        items:
          $ref: '#/definitions/.branch.issues'
      url:
        description: url
        type: string
  .branch.issues: {}
  .branches:
    properties:
      _class:
        type: string
      href:
        type: string
  .defaultParameterValue:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      name:
        description: name
        type: string
      value:
        description: value, string or bool type
        $ref: '#/definitions/.defaultParameterValue.value'
  .defaultParameterValue.value: {}
  .latestRun:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/.latestRun.actions'
      artifactsZipFile:
        description: the artifacts zip file
        type: string
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/.latestRun.causeOfBlockage'
      causes:
        type: array
        items:
          $ref: '#/definitions/.latestRun.causes'
      changeSet:
        description: changeset information
        type: array
        items:
          $ref: '#/definitions/.latestRun.changeSet'
      description:
        description: description
        $ref: '#/definitions/.latestRun.description'
      durationInMillis:
        description: duration time in millis
        type: integer
        format: int32
      enQueueTime:
        description: the time of enter the queue
        type: string
      endTime:
        description: the time of end
        type: string
      estimatedDurationInMillis:
        description: estimated duration time in millis
        type: integer
        format: int32
      id:
        description: id
        type: string
      name:
        description: name
        $ref: '#/definitions/.latestRun.name'
      organization:
        description: the name of organization
        type: string
      pipeline:
        description: pipeline
        type: string
      replayable:
        description: Replayable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      runSummary:
        description: pipeline run summary
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: type
        type: string
  .latestRun.actions: {}
  .latestRun.causeOfBlockage: {}
  .latestRun.causes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      shortDescription:
        description: short description
        type: string
      userId:
        description: user id
        type: string
      userName:
        description: user name
        type: string
  .latestRun.changeSet: {}
  .latestRun.description: {}
  .latestRun.name: {}
  .permissions:
    properties:
      configure:
        description: configure action
        type: boolean
      create:
        description: create action
        type: boolean
      read:
        description: read action
        type: boolean
      start:
        description: start action
        type: boolean
      stop:
        description: stop action
        type: boolean
  .queue:
    properties:
      _class:
        type: string
      href:
        type: string
  .ranges:
    properties:
      ranges:
        type: array
        items:
          $ref: '#/definitions/.ranges.ranges'
  .ranges.ranges:
    properties:
      end:
        description: End build number
        type: integer
        format: int32
      start:
        description: Start build number
        type: integer
        format: int32
  .repositories:
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/scm.repository'
  .repositories.items:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      defaultBranch:
        description: default branch
        type: string
      description:
        description: description
        type: string
      fullName:
        description: full name
        type: string
      name:
        description: name
        type: string
      permissions:
        $ref: '#/definitions/.permissions'
      private:
        description: private or not
        type: boolean
  .repositories.lastPage: {}
  .repositories.nextPage: {}
  .runs:
    properties:
      _class:
        type: string
      href:
        type: string
  .scm:
    properties:
      _class:
        type: string
      href:
        type: string
  .scmSource:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      apiUrl:
        description: api url
        $ref: '#/definitions/.scmSource.apiUrl'
      id:
        description: The id of the source configuration management (SCM).
        type: string
  .scmSource.apiUrl: {}
  .self:
    properties:
      _class:
        type: string
      href:
        type: string
  .trends:
    properties:
      _class:
        type: string
      href:
        type: string
  api.ListResult:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/api.ListResult.items'
      totalItems:
        type: integer
        format: int32
  api.ListResult.items: {}
  argocd.ApplicationPageResult:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.Application'
      totalItems:
        type: integer
        format: int32
  argocd.ApplicationSyncRequest:
    required:
      - revision
      - dryRun
      - prune
      - resources
    properties:
      dryRun:
        type: boolean
      infos:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.Info'
      manifests:
        type: array
        items:
          type: string
      prune:
        type: boolean
      resources:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.SyncOperationResource'
      retryStrategy:
        $ref: '#/definitions/v1alpha1.RetryStrategy'
      revision:
        type: string
      strategy:
        $ref: '#/definitions/v1alpha1.SyncStrategy'
      syncOptions:
        type: array
        items:
          type: string
  argocd.ApplicationsSummary:
    required:
      - total
      - healthStatus
      - syncStatus
    properties:
      healthStatus:
        type: object
        additionalProperties:
          type: integer
      syncStatus:
        type: object
        additionalProperties:
          type: integer
      total:
        type: integer
        format: int32
  devops.Artifacts:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      downloadable:
        description: downloadable or not
        type: boolean
      id:
        description: id
        type: string
      name:
        description: name
        type: string
      path:
        description: path
        type: string
      size:
        description: size
        type: integer
        format: int32
      url:
        description: The url for Download artifacts
        type: string
  devops.BranchPipeline:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipeline.actions'
      branch:
        $ref: '#/definitions/.branch'
      disabled:
        description: disable or not, if disabled, can not do any action
        type: boolean
      displayName:
        description: display name
        type: string
      estimatedDurationInMillis:
        description: estimated duration time in millis
        type: integer
        format: int32
      fullDisplayName:
        description: full display name
        type: string
      fullName:
        description: full name
        type: string
      latestRun:
        $ref: '#/definitions/.latestRun'
      name:
        description: name
        type: string
      organization:
        description: the name of organization
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipeline.parameters'
      permissions:
        $ref: '#/definitions/.permissions'
      weatherScore:
        description: the score to description the result of pipeline
        type: integer
        format: int32
  devops.BranchPipeline.actions: {}
  devops.BranchPipeline.parameters:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      choices:
        description: choices
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipeline.parameters.choices'
      defaultParameterValue:
        $ref: '#/definitions/.defaultParameterValue'
      description:
        description: description
        type: string
      name:
        description: name
        type: string
      type:
        description: type
        type: string
  devops.BranchPipeline.parameters.choices: {}
  devops.BranchPipelineRunNodes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipelineRunNodes.actions'
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/devops.BranchPipelineRunNodes.causeOfBlockage'
      displayDescription:
        description: display description
        $ref: '#/definitions/devops.BranchPipelineRunNodes.displayDescription'
      displayName:
        description: display name
        type: string
      durationInMillis:
        description: duration time in millis
        type: integer
        format: int32
      edges:
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipelineRunNodes.edges'
      firstParent:
        description: first parent resource
        $ref: '#/definitions/devops.BranchPipelineRunNodes.firstParent'
      id:
        description: id
        type: string
      input:
        description: the action should user input
        $ref: '#/definitions/devops.Input'
      restartable:
        description: restartable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS. e.g. SUCCESS
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. RUNNING
        type: string
      steps:
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipelineRunNodes.steps'
      type:
        description: source type, e.g. "WorkflowRun"
        type: string
  devops.BranchPipelineRunNodes.actions: {}
  devops.BranchPipelineRunNodes.causeOfBlockage: {}
  devops.BranchPipelineRunNodes.displayDescription: {}
  devops.BranchPipelineRunNodes.edges:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      id:
        description: id
        type: string
      type:
        description: source type
        type: string
  devops.BranchPipelineRunNodes.firstParent: {}
  devops.BranchPipelineRunNodes.steps:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        $ref: '#/definitions/._links'
      actions:
        description: references the reachable path to this resource
        type: array
        items:
          $ref: '#/definitions/devops.BranchPipelineRunNodes.steps.actions'
      displayDescription:
        description: display description
        $ref: '#/definitions/devops.BranchPipelineRunNodes.steps.displayDescription'
      displayName:
        description: display name
        type: string
      durationInMillis:
        description: duration time in millis
        type: integer
        format: int32
      id:
        description: id
        type: string
      input:
        description: the action should user input
        $ref: '#/definitions/devops.Input'
      result:
        description: result
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: source type
        type: string
  devops.BranchPipelineRunNodes.steps.actions:
    properties:
      _class:
        type: string
      _links:
        $ref: '#/definitions/._links'
      urlName:
        type: string
  devops.BranchPipelineRunNodes.steps.displayDescription: {}
  devops.CheckCronRes:
    properties:
      lastTime:
        description: last run time.
        type: string
      message:
        description: message
        type: string
      nextTime:
        description: next run time.
        type: string
      result:
        description: result e.g. ok, error
        type: string
  devops.CheckPlayload:
    properties:
      abort:
        description: abort or not
        type: boolean
      id:
        description: id
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/devops.CheckPlayloadParameters'
  devops.CheckPlayloadParameters:
    properties:
      name:
        description: name
        type: string
      value:
        description: value
        $ref: '#/definitions/devops.CheckPlayloadParameters.value'
  devops.CheckPlayloadParameters.value: {}
  devops.CheckScript:
    properties:
      column:
        description: column e.g. 0
        type: integer
        format: int32
      line:
        description: line e.g. 0
        type: integer
        format: int32
      message:
        description: 'message e.g. unexpected char: ''#'''
        type: string
      status:
        description: status e.g. fail
        type: string
  devops.CreateScmServerReq:
    properties:
      apiUrl:
        description: url of scm server
        type: string
      name:
        description: name of scm server
        type: string
  devops.Credential:
    required:
      - id
      - type
    properties:
      description:
        description: Credential's description'
        type: string
      display_name:
        description: Credential's display name
        type: string
      domain:
        description: Credential's domain,In ks we only use the default domain, default '_''
        type: string
      fingerprint:
        description: usage of the Credential
        $ref: '#/definitions/devops.Credential.fingerprint'
      id:
        description: Id of Credential, e.g. dockerhub-id
        type: string
      type:
        description: Type of Credential, e.g. ssh/kubeconfig
        type: string
  devops.Credential.fingerprint:
    properties:
      file_name:
        description: Credential's display name and description
        type: string
      hash:
        description: Credential's hash
        type: string
      usage:
        description: all usage of Credential
        type: array
        items:
          $ref: '#/definitions/devops.Credential.fingerprint.usage'
  devops.Credential.fingerprint.usage:
    properties:
      name:
        description: pipeline full name
        type: string
      ranges:
        description: The build number of all pipelines that use this credential
        $ref: '#/definitions/.ranges'
  devops.CronData:
    required:
      - cron
    properties:
      cron:
        description: Cron script data.
        type: string
      pipelineName:
        description: Pipeline name, if pipeline haven't created, not required'
        type: string
  devops.Crumb:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      crumb:
        description: crumb data
        type: string
      crumbRequestField:
        description: crumb request field
        type: string
  devops.Input:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/devops.Input._links'
      id:
        description: the id of check action
        type: string
      message:
        description: the message of check action
        type: string
      ok:
        description: check status. e.g. "Proceed"
        type: string
      parameters:
        description: the parameters of check action
        type: array
        items:
          $ref: '#/definitions/devops.Input.parameters'
      submitter:
        description: check submitter
        $ref: '#/definitions/devops.Input.submitter'
  devops.Input._links:
    properties:
      self:
        $ref: '#/definitions/devops.Input._links.self'
  devops.Input._links.self:
    properties:
      _class:
        type: string
      href:
        type: string
  devops.Input.parameters: {}
  devops.Input.submitter: {}
  devops.NodeSteps:
    required:
      - aprovable
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        type: array
        items:
          $ref: '#/definitions/devops.NodeSteps.actions'
      aprovable:
        description: indicate if this step can be approved by current user
        type: boolean
      displayDescription:
        description: display description
        type: string
      displayName:
        description: display name
        type: string
      durationInMillis:
        description: duration time in mullis
        type: integer
        format: int32
      id:
        description: id
        type: string
      input:
        description: the action should user input
        $ref: '#/definitions/devops.Input'
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      startTime:
        description: the time of starts
        type: string
      state:
        description: run state. e.g. SKIPPED
        type: string
      type:
        description: type
        type: string
  devops.NodeSteps.actions:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      urlName:
        description: url name
        type: string
  devops.NodesDetail:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.NodesDetail.actions'
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/devops.NodesDetail.causeOfBlockage'
      displayDescription:
        description: display description
        $ref: '#/definitions/devops.NodesDetail.displayDescription'
      displayName:
        description: display name
        type: string
      durationInMillis:
        description: duration time in mullis
        type: integer
        format: int32
      edges:
        description: edges
        type: array
        items:
          $ref: '#/definitions/devops.NodesDetail.edges'
      firstParent:
        description: first parent
        $ref: '#/definitions/devops.NodesDetail.firstParent'
      id:
        description: id
        type: string
      input:
        description: the action should user input
        $ref: '#/definitions/devops.Input'
      restartable:
        description: restartable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. FINISHED
        type: string
      steps:
        description: steps
        type: array
        items:
          $ref: '#/definitions/devops.NodeSteps'
      type:
        description: type
        type: string
  devops.NodesDetail.actions: {}
  devops.NodesDetail.causeOfBlockage: {}
  devops.NodesDetail.displayDescription: {}
  devops.NodesDetail.edges: {}
  devops.NodesDetail.firstParent: {}
  devops.OrgRepo:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      repositories:
        $ref: '#/definitions/.repositories'
  devops.Parameter:
    properties:
      name:
        description: name
        type: string
      value:
        description: value
        $ref: '#/definitions/devops.Parameter.value'
  devops.Parameter.value: {}
  devops.Pipeline:
    required:
      - weatherScore
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource.
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions.
        type: array
        items:
          $ref: '#/definitions/devops.Pipeline.actions'
      annotations:
        description: Add annotations from crd
        type: object
        additionalProperties:
          type: string
      branchNames:
        description: branch names
        type: array
        items:
          type: string
      disabled:
        description: disable or not, if disabled, can not do any action.
        $ref: '#/definitions/devops.Pipeline.disabled'
      displayName:
        description: display name
        type: string
      estimatedDurationInMillis:
        description: estimated duration time, unit is millis
        type: integer
        format: int32
      fullDisplayName:
        description: full display name
        type: string
      fullName:
        description: full name
        type: string
      name:
        description: name
        type: string
      numberOfFailingBranches:
        description: number of failing branches
        type: integer
        format: int32
      numberOfFailingPullRequests:
        description: number of failing pull requests
        type: integer
        format: int32
      numberOfFolders:
        description: number of folders
        type: integer
        format: int32
      numberOfPipelines:
        description: number of pipelines
        type: integer
        format: int32
      numberOfSuccessfulBranches:
        description: number of successful pull requests
        type: integer
        format: int32
      numberOfSuccessfulPullRequests:
        description: number of successful pull requests
        type: integer
        format: int32
      organization:
        description: the name of organization
        type: string
      parameters:
        description: parameters of pipeline, a pipeline can define list of parameters pipeline job expects.
        $ref: '#/definitions/devops.Pipeline.parameters'
      permissions:
        description: permissions
        $ref: '#/definitions/.permissions'
      pipelineFolderNames:
        description: pipeline folder names
        type: array
        items:
          $ref: '#/definitions/devops.Pipeline.pipelineFolderNames'
      scmSource:
        $ref: '#/definitions/.scmSource'
      totalNumberOfBranches:
        description: total number of branches
        type: integer
        format: int32
      totalNumberOfPullRequests:
        description: total number of pull requests
        type: integer
        format: int32
      weatherScore:
        description: the score to description the result of pipeline activity
        type: integer
        format: int32
  devops.Pipeline.actions: {}
  devops.Pipeline.disabled: {}
  devops.Pipeline.parameters: {}
  devops.Pipeline.pipelineFolderNames: {}
  devops.PipelineBranch: {}
  devops.PipelineList:
    required:
      - items
      - total_count
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/devops.Pipeline'
      total_count:
        type: integer
        format: int32
  devops.PipelineRun:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRun.actions'
      artifactsZipFile:
        description: the artifacts zip file
        $ref: '#/definitions/devops.PipelineRun.artifactsZipFile'
      branch:
        description: branch
        $ref: '#/definitions/devops.PipelineRun.branch'
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/devops.PipelineRun.causeOfBlockage'
      causes:
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRun.causes'
      changeSet:
        description: changeset information
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRun.changeSet'
      commitId:
        description: commit id
        $ref: '#/definitions/devops.PipelineRun.commitId'
      commitUrl:
        description: commit url
        $ref: '#/definitions/devops.PipelineRun.commitUrl'
      description:
        description: description
        $ref: '#/definitions/devops.PipelineRun.description'
      durationInMillis:
        description: duration time in millis
        type: integer
        format: int32
      enQueueTime:
        description: the time of enter the queue
        type: string
      endTime:
        description: the time of end
        type: string
      estimatedDurationInMillis:
        description: estimated duration time in millis
        type: integer
        format: int32
      id:
        description: id
        type: string
      name:
        description: name
        $ref: '#/definitions/devops.PipelineRun.name'
      organization:
        description: the name of organization
        type: string
      pipeline:
        description: the name of pipeline
        type: string
      pullRequest:
        description: pull request
        $ref: '#/definitions/devops.PipelineRun.pullRequest'
      replayable:
        description: replayable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      runSummary:
        description: pipeline run summary
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: type
        type: string
  devops.PipelineRun.actions: {}
  devops.PipelineRun.artifactsZipFile: {}
  devops.PipelineRun.branch: {}
  devops.PipelineRun.causeOfBlockage: {}
  devops.PipelineRun.causes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      shortDescription:
        description: short description
        type: string
      userId:
        description: user id
        type: string
      userName:
        description: user name
        type: string
  devops.PipelineRun.changeSet: {}
  devops.PipelineRun.commitId: {}
  devops.PipelineRun.commitUrl: {}
  devops.PipelineRun.description: {}
  devops.PipelineRun.name: {}
  devops.PipelineRun.pullRequest: {}
  devops.PipelineRunList:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRun'
      totalItems:
        type: integer
        format: int32
  devops.PipelineRunNodes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRunNodes.actions'
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/devops.PipelineRunNodes.causeOfBlockage'
      displayDescription:
        description: display description
        $ref: '#/definitions/devops.PipelineRunNodes.displayDescription'
      displayName:
        description: display name
        type: string
      durationInMillis:
        description: duration time in mullis
        type: integer
        format: int32
      edges:
        description: edges
        type: array
        items:
          $ref: '#/definitions/devops.PipelineRunNodes.edges'
      firstParent:
        description: first parent
        $ref: '#/definitions/devops.PipelineRunNodes.firstParent'
      id:
        description: id
        type: string
      input:
        description: the action should user input
        $ref: '#/definitions/devops.Input'
      restartable:
        description: restartable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. FINISHED
        type: string
      type:
        description: type
        type: string
  devops.PipelineRunNodes.actions: {}
  devops.PipelineRunNodes.causeOfBlockage: {}
  devops.PipelineRunNodes.displayDescription: {}
  devops.PipelineRunNodes.edges: {}
  devops.PipelineRunNodes.firstParent: {}
  devops.ReplayPipeline:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions.
        type: array
        items:
          $ref: '#/definitions/devops.ReplayPipeline.actions'
      artifactsZipFile:
        description: the artifacts zip file
        $ref: '#/definitions/devops.ReplayPipeline.artifactsZipFile'
      causeOfBlockage:
        description: the cause of blockage
        type: string
      causes:
        type: array
        items:
          $ref: '#/definitions/devops.ReplayPipeline.causes'
      changeSet:
        description: changeset information
        type: array
        items:
          $ref: '#/definitions/devops.ReplayPipeline.changeSet'
      description:
        description: description
        $ref: '#/definitions/devops.ReplayPipeline.description'
      durationInMillis:
        description: duration time in millis
        $ref: '#/definitions/devops.ReplayPipeline.durationInMillis'
      enQueueTime:
        description: the time of enter the queue
        $ref: '#/definitions/devops.ReplayPipeline.enQueueTime'
      endTime:
        description: the time of end
        $ref: '#/definitions/devops.ReplayPipeline.endTime'
      estimatedDurationInMillis:
        description: estimated duration time, unit is millis
        $ref: '#/definitions/devops.ReplayPipeline.estimatedDurationInMillis'
      id:
        description: id
        type: string
      name:
        description: name
        $ref: '#/definitions/devops.ReplayPipeline.name'
      organization:
        description: the name of organization
        type: string
      pipeline:
        description: pipeline
        type: string
      queueId:
        description: queue id
        type: string
      replayable:
        description: replayable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      runSummary:
        description: pipeline run summary
        $ref: '#/definitions/devops.ReplayPipeline.runSummary'
      startTime:
        description: the time of start
        $ref: '#/definitions/devops.ReplayPipeline.startTime'
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: type
        type: string
  devops.ReplayPipeline.actions: {}
  devops.ReplayPipeline.artifactsZipFile: {}
  devops.ReplayPipeline.causes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      shortDescription:
        description: short description
        type: string
      userId:
        description: user id
        type: string
      userName:
        description: user name
        type: string
  devops.ReplayPipeline.changeSet: {}
  devops.ReplayPipeline.description: {}
  devops.ReplayPipeline.durationInMillis: {}
  devops.ReplayPipeline.enQueueTime: {}
  devops.ReplayPipeline.endTime: {}
  devops.ReplayPipeline.estimatedDurationInMillis: {}
  devops.ReplayPipeline.name: {}
  devops.ReplayPipeline.runSummary: {}
  devops.ReplayPipeline.startTime: {}
  devops.ReqScript:
    properties:
      value:
        description: Pipeline script data
        type: string
  devops.RunPayload:
    properties:
      parameters:
        type: array
        items:
          $ref: '#/definitions/devops.Parameter'
  devops.RunPipeline:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions
        type: array
        items:
          $ref: '#/definitions/devops.RunPipeline.actions'
      artifactsZipFile:
        description: the artifacts zip file
        $ref: '#/definitions/devops.RunPipeline.artifactsZipFile'
      causeOfBlockage:
        description: the cause of blockage
        type: string
      causes:
        type: array
        items:
          $ref: '#/definitions/devops.RunPipeline.causes'
      changeSet:
        description: changeset information
        type: array
        items:
          $ref: '#/definitions/devops.RunPipeline.changeSet'
      description:
        description: description
        $ref: '#/definitions/devops.RunPipeline.description'
      durationInMillis:
        description: duration time in millis
        $ref: '#/definitions/devops.RunPipeline.durationInMillis'
      enQueueTime:
        description: the time of enter the queue
        $ref: '#/definitions/devops.RunPipeline.enQueueTime'
      endTime:
        description: the time of end
        $ref: '#/definitions/devops.RunPipeline.endTime'
      estimatedDurationInMillis:
        description: estimated duration time in millis
        $ref: '#/definitions/devops.RunPipeline.estimatedDurationInMillis'
      id:
        description: id
        type: string
      name:
        description: name
        $ref: '#/definitions/devops.RunPipeline.name'
      organization:
        description: the name of organization
        type: string
      pipeline:
        description: pipeline
        type: string
      queueId:
        description: queue id
        type: string
      replayable:
        description: replayable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      runSummary:
        description: pipeline run summary
        $ref: '#/definitions/devops.RunPipeline.runSummary'
      startTime:
        description: the time of start
        $ref: '#/definitions/devops.RunPipeline.startTime'
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: type
        type: string
  devops.RunPipeline.actions: {}
  devops.RunPipeline.artifactsZipFile: {}
  devops.RunPipeline.causes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      shortDescription:
        description: short description
        type: string
      userId:
        description: user id
        type: string
      userName:
        description: user name
        type: string
  devops.RunPipeline.changeSet: {}
  devops.RunPipeline.description: {}
  devops.RunPipeline.durationInMillis: {}
  devops.RunPipeline.enQueueTime: {}
  devops.RunPipeline.endTime: {}
  devops.RunPipeline.estimatedDurationInMillis: {}
  devops.RunPipeline.name: {}
  devops.RunPipeline.runSummary: {}
  devops.RunPipeline.startTime: {}
  devops.SCMOrg:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      avatar:
        description: the url of organization avatar
        type: string
      jenkinsOrganizationPipeline:
        description: weather or not already have jenkins pipeline.
        type: boolean
      key:
        description: the key of a Bitbucket organization
        type: string
      name:
        description: organization name
        type: string
  devops.SCMServer:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      apiUrl:
        description: url of scm server
        type: string
      id:
        description: server id of scm server
        type: string
      name:
        description: name of scm server
        type: string
  devops.StopPipeline:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      _links:
        description: references the reachable path to this resource
        $ref: '#/definitions/._links'
      actions:
        description: the list of all actions.
        type: array
        items:
          $ref: '#/definitions/devops.StopPipeline.actions'
      artifactsZipFile:
        description: the artifacts zip file
        $ref: '#/definitions/devops.StopPipeline.artifactsZipFile'
      branch:
        $ref: '#/definitions/.branch'
      causeOfBlockage:
        description: the cause of blockage
        $ref: '#/definitions/devops.StopPipeline.causeOfBlockage'
      causes:
        type: array
        items:
          $ref: '#/definitions/devops.StopPipeline.causes'
      changeSet:
        description: changeset information
        type: array
        items:
          $ref: '#/definitions/devops.StopPipeline.changeSet'
      commitId:
        description: commit id
        type: string
      commitUrl:
        description: commit url
        $ref: '#/definitions/devops.StopPipeline.commitUrl'
      description:
        description: description
        $ref: '#/definitions/devops.StopPipeline.description'
      durationInMillis:
        description: duration time in millis
        type: integer
        format: int32
      enQueueTime:
        description: the time of enter the queue
        type: string
      endTime:
        description: the time of end
        type: string
      estimatedDurationInMillis:
        description: estimated duration time in millis
        type: integer
        format: int32
      id:
        description: id
        type: string
      name:
        description: name
        $ref: '#/definitions/devops.StopPipeline.name'
      organization:
        description: the name of organization
        type: string
      pipeline:
        description: pipeline
        type: string
      pullRequest:
        description: pull request
        $ref: '#/definitions/devops.StopPipeline.pullRequest'
      replayable:
        description: replayable or not
        type: boolean
      result:
        description: the result of pipeline run. e.g. SUCCESS
        type: string
      runSummary:
        description: pipeline run summary
        type: string
      startTime:
        description: the time of start
        type: string
      state:
        description: run state. e.g. RUNNING
        type: string
      type:
        description: type
        type: string
  devops.StopPipeline.actions: {}
  devops.StopPipeline.artifactsZipFile: {}
  devops.StopPipeline.causeOfBlockage: {}
  devops.StopPipeline.causes:
    properties:
      _class:
        description: It’s a fully qualified name and is an identifier of the producer of this resource's capability.
        type: string
      shortDescription:
        description: short description
        type: string
  devops.StopPipeline.changeSet: {}
  devops.StopPipeline.commitUrl: {}
  devops.StopPipeline.description: {}
  devops.StopPipeline.name: {}
  devops.StopPipeline.pullRequest: {}
  devops.Validates:
    properties:
      credentialId:
        description: the id of credential
        type: string
  git.VerifyResponse:
    required:
      - message
      - code
    properties:
      code:
        type: integer
        format: int32
      credentialId:
        description: the id of credential
        type: string
      message:
        type: string
  job.Branch:
    properties:
      isPrimary:
        type: boolean
      issues:
        type: array
        items:
          $ref: '#/definitions/job.Issue'
      url:
        type: string
  job.Edge:
    properties:
      id:
        type: string
      type:
        type: string
  job.Input:
    properties:
      id:
        type: string
      message:
        type: string
      ok:
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/job.ParameterDefinition'
      submitter:
        type: string
  job.Issue:
    properties:
      id:
        type: string
      url:
        type: string
  job.ParameterDefinition:
    required:
      - name
      - type
      - value
    properties:
      choices:
        type: array
        items:
          type: string
      defaultParameterValue:
        $ref: '#/definitions/job.ParameterValue'
      description:
        type: string
      file:
        type: string
      filter:
        type: string
      name:
        type: string
      projectName:
        type: string
      type:
        type: string
      value:
        type: string
  job.ParameterValue:
    required:
      - name
    properties:
      jobName:
        type: string
      name:
        type: string
      number:
        type: string
      value:
        $ref: '#/definitions/job.ParameterValue.value'
  job.ParameterValue.value: {}
  job.PullRequest:
    properties:
      author:
        type: string
      id:
        type: string
      title:
        type: string
      url:
        type: string
  job.Time:
    required:
      - Time
    properties:
      Time:
        type: string
        format: date-time
  map[string]string:
    type: object
    additionalProperties:
      type: string
  meta.LocalObjectReference:
    required:
      - name
    properties:
      name:
        type: string
  meta.NamespacedObjectKindReference:
    required:
      - kind
      - name
    properties:
      apiVersion:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
  meta.NamespacedObjectReference:
    required:
      - name
    properties:
      name:
        type: string
      namespace:
        type: string
  meta.SecretKeyReference:
    required:
      - name
    properties:
      key:
        type: string
      name:
        type: string
  pipeline.Branch:
    required:
      - weatherScore
    properties:
      branch:
        $ref: '#/definitions/job.Branch'
      disabled:
        type: boolean
      latestRun:
        $ref: '#/definitions/pipeline.LatestRun'
      name:
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/job.ParameterDefinition'
      pullRequest:
        $ref: '#/definitions/job.PullRequest'
      rawName:
        type: string
      weatherScore:
        type: integer
        format: int32
  pipeline.Cause:
    properties:
      shortDescription:
        type: string
  pipeline.LatestRun:
    properties:
      causes:
        type: array
        items:
          $ref: '#/definitions/pipeline.Cause'
      durationInMillis:
        type: integer
        format: int64
      endTime:
        $ref: '#/definitions/job.Time'
      id:
        type: string
      name:
        type: string
      pipeline:
        type: string
      result:
        type: string
      startTime:
        $ref: '#/definitions/job.Time'
      state:
        type: string
  pipelinerun.NodeDetail:
    properties:
      causeOfBlockage:
        type: string
      displayDescription:
        type: string
      displayName:
        type: string
      durationInMillis:
        type: integer
        format: int64
      edges:
        type: array
        items:
          $ref: '#/definitions/job.Edge'
      firstParent:
        type: string
      id:
        type: string
      input:
        $ref: '#/definitions/job.Input'
      restartable:
        type: boolean
      result:
        type: string
      startTime:
        $ref: '#/definitions/job.Time'
      state:
        type: string
      steps:
        type: array
        items:
          $ref: '#/definitions/pipelinerun.Step'
      type:
        type: string
  pipelinerun.Step:
    properties:
      approvable:
        type: boolean
      displayDescription:
        type: string
      displayName:
        type: string
      durationInMillis:
        type: integer
        format: int64
      id:
        type: string
      input:
        $ref: '#/definitions/job.Input'
      result:
        type: string
      startTime:
        $ref: '#/definitions/job.Time'
      state:
        type: string
      type:
        type: string
  scm.GitRepositoryPageResult:
    required:
      - items
      - totalItems
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.GitRepository'
      totalItems:
        type: integer
        format: int32
  scm.organization:
    required:
      - name
      - avatar
    properties:
      avatar:
        type: string
      name:
        type: string
  scm.repository:
    required:
      - defaultBranch
      - name
    properties:
      defaultBranch:
        type: string
      name:
        type: string
  scm.repositoryListResult:
    required:
      - repositories
    properties:
      repositories:
        $ref: '#/definitions/.repositories'
  template.PageResult:
    required:
      - items
      - total
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.Template'
      total:
        type: integer
        format: int32
  template.Parameter:
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        $ref: '#/definitions/template.Parameter.value'
  template.Parameter.value: {}
  template.RenderBody:
    required:
      - parameters
    properties:
      parameters:
        type: array
        items:
          $ref: '#/definitions/template.Parameter'
  v1.Condition:
    description: Condition contains details for one aspect of the current state of this API Resource.
    required:
      - type
      - status
      - lastTransitionTime
      - reason
      - message
    properties:
      lastTransitionTime:
        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
        type: string
      message:
        description: message is a human readable message indicating details about the transition. This may be an empty string.
        type: string
      observedGeneration:
        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
        type: integer
        format: int64
      reason:
        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
        type: string
      status:
        description: status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: type of condition in CamelCase or in foo.example.com/CamelCase.
        type: string
  v1.GroupKind:
    required:
      - group
      - kind
    properties:
      group:
        type: string
      kind:
        type: string
  v1.JSON:
    required:
      - Raw
    properties:
      Raw:
        type: string
  v1.ListMeta:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type: string
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type: integer
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
  v1.LocalObjectReference:
    description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
    properties:
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        type: string
  v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        type: string
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
        type: string
      time:
        description: Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
        type: string
  v1.ObjectMeta:
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    properties:
      annotations:
        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
        type: object
        additionalProperties:
          type: string
      clusterName:
        description: |-
          Deprecated: ClusterName is a legacy field that was always cleared by the system and never used; it will be removed completely in 1.25.

          The name in the go struct is changed to help clients detect accidental use.
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        type: string
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
        type: integer
        format: int64
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        type: string
      finalizers:
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
        type: array
        items:
          type: string
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
        type: integer
        format: int64
      labels:
        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
        type: object
        additionalProperties:
          type: string
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
        type: array
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
      name:
        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        type: array
        items:
          $ref: '#/definitions/v1.OwnerReference'
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
  v1.ObjectReference:
    description: ObjectReference contains enough information to let you inspect or modify the referred object.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      fieldPath:
        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.'
        type: string
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        type: string
      namespace:
        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
        type: string
      resourceVersion:
        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      uid:
        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
        type: string
  v1.OwnerReference:
    description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
    required:
      - apiVersion
      - kind
      - name
      - uid
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      uid:
        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
  v1.Secret:
    description: Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      data:
        description: Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
        type: object
        additionalProperties:
          type: string
      immutable:
        description: Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.
        type: boolean
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/v1.ObjectMeta'
      stringData:
        description: stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.
        type: object
        additionalProperties:
          type: string
      type:
        description: 'Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types'
        type: string
  v1.SecretReference:
    description: SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
    properties:
      name:
        description: name is unique within a namespace to reference a secret resource.
        type: string
      namespace:
        description: namespace defines the space within which the secret name must be unique.
        type: string
  v1alpha1.Application:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha1.ApplicationSpec'
      status:
        $ref: '#/definitions/v1alpha1.ApplicationStatus'
  v1alpha1.ApplicationDestination:
    properties:
      name:
        type: string
      namespace:
        type: string
      server:
        type: string
  v1alpha1.ApplicationSource:
    required:
      - repoURL
    properties:
      chart:
        type: string
      directory:
        $ref: '#/definitions/v1alpha1.ApplicationSourceDirectory'
      helm:
        $ref: '#/definitions/v1alpha1.ApplicationSourceHelm'
      ksonnet:
        $ref: '#/definitions/v1alpha1.ApplicationSourceKsonnet'
      kustomize:
        $ref: '#/definitions/v1alpha1.ApplicationSourceKustomize'
      path:
        type: string
      plugin:
        $ref: '#/definitions/v1alpha1.ApplicationSourcePlugin'
      repoURL:
        type: string
      targetRevision:
        type: string
  v1alpha1.ApplicationSourceDirectory:
    properties:
      exclude:
        type: string
      include:
        type: string
      jsonnet:
        $ref: '#/definitions/v1alpha1.ApplicationSourceJsonnet'
      recurse:
        type: boolean
  v1alpha1.ApplicationSourceHelm:
    properties:
      fileParameters:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.HelmFileParameter'
      ignoreMissingValueFiles:
        type: boolean
      parameters:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.HelmParameter'
      passCredentials:
        type: boolean
      releaseName:
        type: string
      skipCrds:
        type: boolean
      valueFiles:
        type: array
        items:
          type: string
      values:
        type: string
      version:
        type: string
  v1alpha1.ApplicationSourceJsonnet:
    properties:
      extVars:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.JsonnetVar'
      libs:
        type: array
        items:
          type: string
      tlas:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.JsonnetVar'
  v1alpha1.ApplicationSourceKsonnet:
    properties:
      environment:
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.KsonnetParameter'
  v1alpha1.ApplicationSourceKustomize:
    properties:
      commonAnnotations:
        type: object
        additionalProperties:
          type: string
      commonLabels:
        type: object
        additionalProperties:
          type: string
      forceCommonAnnotations:
        type: boolean
      forceCommonLabels:
        type: boolean
      images:
        type: array
        items:
          type: string
      namePrefix:
        type: string
      nameSuffix:
        type: string
      version:
        type: string
  v1alpha1.ApplicationSourcePlugin:
    properties:
      env:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.EnvEntry'
      name:
        type: string
  v1alpha1.ApplicationSpec:
    properties:
      argoApp:
        $ref: '#/definitions/v1alpha1.ArgoApplication'
      fluxApp:
        $ref: '#/definitions/v1alpha1.FluxApplication'
      kind:
        type: string
  v1alpha1.ApplicationStatus:
    properties:
      argoApp:
        type: string
      fluxApp:
        $ref: '#/definitions/v1alpha1.FluxApplicationStatus'
      kind:
        type: string
  v1alpha1.ArgoApplication:
    properties:
      operation:
        $ref: '#/definitions/v1alpha1.Operation'
      spec:
        $ref: '#/definitions/v1alpha1.ArgoApplicationSpec'
  v1alpha1.ArgoApplicationSpec:
    required:
      - source
      - destination
      - project
    properties:
      destination:
        $ref: '#/definitions/v1alpha1.ApplicationDestination'
      ignoreDifferences:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.ResourceIgnoreDifferences'
      info:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.Info'
      project:
        type: string
      revisionHistoryLimit:
        type: integer
        format: int64
      source:
        $ref: '#/definitions/v1alpha1.ApplicationSource'
      syncPolicy:
        $ref: '#/definitions/v1alpha1.SyncPolicy'
  v1alpha1.Backoff:
    properties:
      duration:
        type: string
      factor:
        type: integer
        format: int64
      maxDuration:
        type: string
  v1alpha1.Deploy:
    required:
      - destination
      - interval
    properties:
      dependsOn:
        type: array
        items:
          $ref: '#/definitions/meta.NamespacedObjectReference'
      destination:
        $ref: '#/definitions/v1alpha1.FluxApplicationDestination'
      install:
        $ref: '#/definitions/v2beta1.Install'
      interval:
        type: string
      maxHistory:
        type: integer
        format: int32
      postRenderers:
        type: array
        items:
          $ref: '#/definitions/v2beta1.PostRenderer'
      releaseName:
        type: string
      rollback:
        $ref: '#/definitions/v2beta1.Rollback'
      serviceAccountName:
        type: string
      storageNamespace:
        type: string
      suspend:
        type: boolean
      test:
        $ref: '#/definitions/v2beta1.Test'
      timeout:
        type: string
      uninstall:
        $ref: '#/definitions/v2beta1.Uninstall'
      upgrade:
        $ref: '#/definitions/v2beta1.Upgrade'
      values:
        type: string
      valuesFrom:
        type: array
        items:
          $ref: '#/definitions/v2beta1.ValuesReference'
  v1alpha1.EnvEntry:
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        type: string
  v1alpha1.FluxApplication:
    properties:
      spec:
        $ref: '#/definitions/v1alpha1.FluxApplicationSpec'
  v1alpha1.FluxApplicationConfig:
    properties:
      helmRelease:
        $ref: '#/definitions/v1alpha1.HelmReleaseSpec'
      kustomization:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.KustomizationSpec'
  v1alpha1.FluxApplicationDestination:
    properties:
      kubeConfig:
        $ref: '#/definitions/v2beta1.KubeConfig'
      targetNamespace:
        type: string
  v1alpha1.FluxApplicationSource:
    required:
      - sourceRef
    properties:
      sourceRef:
        $ref: '#/definitions/v2beta1.CrossNamespaceObjectReference'
  v1alpha1.FluxApplicationSpec:
    required:
      - config
    properties:
      config:
        $ref: '#/definitions/v1alpha1.FluxApplicationConfig'
      source:
        $ref: '#/definitions/v1alpha1.FluxApplicationSource'
  v1alpha1.FluxApplicationStatus:
    properties:
      helmReleaseStatus:
        type: object
        additionalProperties:
          $ref: '#/definitions/v2beta1.HelmReleaseStatus'
      kustomizationStatus:
        type: object
        additionalProperties:
          $ref: '#/definitions/v1beta2.KustomizationStatus'
  v1alpha1.HelmChartTemplateSpec:
    required:
      - chart
    properties:
      chart:
        type: string
      interval:
        type: string
      reconcileStrategy:
        type: string
      valuesFiles:
        type: array
        items:
          type: string
      version:
        type: string
  v1alpha1.HelmFileParameter:
    properties:
      name:
        type: string
      path:
        type: string
  v1alpha1.HelmParameter:
    properties:
      forceString:
        type: boolean
      name:
        type: string
      value:
        type: string
  v1alpha1.HelmReleaseSpec:
    required:
      - deploy
    properties:
      chart:
        $ref: '#/definitions/v1alpha1.HelmChartTemplateSpec'
      deploy:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.Deploy'
      template:
        type: string
  v1alpha1.Info:
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        type: string
  v1alpha1.JsonnetVar:
    required:
      - name
      - value
    properties:
      code:
        type: boolean
      name:
        type: string
      value:
        type: string
  v1alpha1.KsonnetParameter:
    required:
      - name
      - value
    properties:
      component:
        type: string
      name:
        type: string
      value:
        type: string
  v1alpha1.KustomizationSpec:
    required:
      - destination
      - interval
      - prune
    properties:
      decryption:
        $ref: '#/definitions/v1beta2.Decryption'
      dependsOn:
        type: array
        items:
          $ref: '#/definitions/meta.NamespacedObjectReference'
      destination:
        $ref: '#/definitions/v1alpha1.FluxApplicationDestination'
      force:
        type: boolean
      healthChecks:
        type: array
        items:
          $ref: '#/definitions/meta.NamespacedObjectKindReference'
      images:
        type: array
        items:
          $ref: '#/definitions/v1beta2.Image'
      interval:
        type: string
      patches:
        type: array
        items:
          $ref: '#/definitions/v1beta2.Patch'
      path:
        type: string
      postBuild:
        $ref: '#/definitions/v1beta2.PostBuild'
      prune:
        type: boolean
      retryInterval:
        type: string
      serviceAccountName:
        type: string
      suspend:
        type: boolean
      timeout:
        type: string
      wait:
        type: boolean
  v1alpha1.Operation:
    properties:
      info:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.Info'
      initiatedBy:
        $ref: '#/definitions/v1alpha1.OperationInitiator'
      retry:
        $ref: '#/definitions/v1alpha1.RetryStrategy'
      sync:
        $ref: '#/definitions/v1alpha1.SyncOperation'
  v1alpha1.OperationInitiator:
    properties:
      automated:
        type: boolean
      username:
        type: string
  v1alpha1.ResourceIgnoreDifferences:
    required:
      - kind
    properties:
      group:
        type: string
      jqPathExpressions:
        type: array
        items:
          type: string
      jsonPointers:
        type: array
        items:
          type: string
      kind:
        type: string
      managedFieldsManagers:
        type: array
        items:
          type: string
      name:
        type: string
      namespace:
        type: string
  v1alpha1.RetryStrategy:
    properties:
      backoff:
        $ref: '#/definitions/v1alpha1.Backoff'
      limit:
        type: integer
        format: int64
  v1alpha1.SyncOperation:
    properties:
      dryRun:
        type: boolean
      manifests:
        type: array
        items:
          type: string
      prune:
        type: boolean
      resources:
        type: array
        items:
          $ref: '#/definitions/v1alpha1.SyncOperationResource'
      revision:
        type: string
      source:
        $ref: '#/definitions/v1alpha1.ApplicationSource'
      syncOptions:
        type: array
        items:
          type: string
      syncStrategy:
        $ref: '#/definitions/v1alpha1.SyncStrategy'
  v1alpha1.SyncOperationResource:
    required:
      - kind
      - name
    properties:
      group:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
  v1alpha1.SyncPolicy:
    properties:
      automated:
        $ref: '#/definitions/v1alpha1.SyncPolicyAutomated'
      retry:
        $ref: '#/definitions/v1alpha1.RetryStrategy'
      syncOptions:
        type: array
        items:
          type: string
  v1alpha1.SyncPolicyAutomated:
    properties:
      allowEmpty:
        type: boolean
      prune:
        type: boolean
      selfHeal:
        type: boolean
  v1alpha1.SyncStrategy:
    properties:
      apply:
        $ref: '#/definitions/v1alpha1.SyncStrategyApply'
      hook:
        $ref: '#/definitions/v1alpha1.SyncStrategyHook'
  v1alpha1.SyncStrategyApply:
    properties:
      force:
        type: boolean
  v1alpha1.SyncStrategyHook:
    properties:
      force:
        type: boolean
  v1alpha3.ApplicationDestination:
    properties:
      name:
        type: string
      namespace:
        type: string
      server:
        type: string
  v1alpha3.Argo:
    properties:
      clusterResourceBlacklist:
        type: array
        items:
          $ref: '#/definitions/v1.GroupKind'
      clusterResourceWhitelist:
        type: array
        items:
          $ref: '#/definitions/v1.GroupKind'
      description:
        type: string
      destinations:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.ApplicationDestination'
      namespaceResourceBlacklist:
        type: array
        items:
          $ref: '#/definitions/v1.GroupKind'
      namespaceResourceWhitelist:
        type: array
        items:
          $ref: '#/definitions/v1.GroupKind'
      orphanedResources:
        $ref: '#/definitions/v1alpha3.OrphanedResourcesMonitorSettings'
      roles:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.ProjectRole'
      signatureKeys:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.SignatureKey'
      sourceRepos:
        type: array
        items:
          type: string
      syncWindows:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.SyncWindow'
  v1alpha3.BitbucketServerSource:
    properties:
      accept_jenkins_notification:
        description: Allow Jenkins send build status notification to Bitbucket
        type: boolean
      api_uri:
        description: The api url can specify the location of the github apiserver.For private cloud configuration
        type: string
      credential_id:
        description: credential id to access github source
        type: string
      discover_branches:
        description: Discover branch configuration
        type: integer
        format: int32
      discover_pr_from_forks:
        description: Discover fork PR configuration
        $ref: '#/definitions/v1alpha3.DiscoverPRFromForks'
      discover_pr_from_origin:
        description: Discover origin PR configuration
        type: integer
        format: int32
      discover_tags:
        description: Discover tag configuration
        type: boolean
      git_clone_option:
        description: advavced git clone options
        $ref: '#/definitions/v1alpha3.GitCloneOption'
      owner:
        description: owner of github repo
        type: string
      regex_filter:
        description: Regex used to match the name of the branch that needs to be run
        type: string
      repo:
        description: repo name of github repo
        type: string
      scm_id:
        description: uid of scm
        type: string
  v1alpha3.ClusterTemplate:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.TemplateSpec'
      status:
        $ref: '#/definitions/v1alpha3.TemplateStatus'
  v1alpha3.Condition:
    required:
      - type
      - status
    properties:
      lastProbeTime:
        type: string
      lastTransitionTime:
        type: string
      message:
        type: string
      reason:
        type: string
      status:
        type: string
      type:
        type: string
  v1alpha3.DevOpsProject:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.DevOpsProjectSpec'
      status:
        $ref: '#/definitions/v1alpha3.DevOpsProjectStatus'
  v1alpha3.DevOpsProjectSpec:
    properties:
      argo:
        $ref: '#/definitions/v1alpha3.Argo'
  v1alpha3.DevOpsProjectStatus:
    properties:
      adminNamespace:
        type: string
  v1alpha3.DiscarderProperty:
    properties:
      days_to_keep:
        description: days to keep pipeline
        type: string
      num_to_keep:
        description: nums to keep pipeline
        type: string
  v1alpha3.DiscoverPRFromForks:
    properties:
      strategy:
        description: github discover strategy
        type: integer
        format: int32
      trust:
        description: trust user type
        type: integer
        format: int32
  v1alpha3.GenericArrayResponse:
    required:
      - status
      - data
      - message
    properties:
      data:
        type: array
        items:
          type: string
      message:
        type: string
      status:
        type: string
  v1alpha3.GenericPayload:
    required:
      - data
    properties:
      data:
        type: string
  v1alpha3.GenericResponse:
    required:
      - result
    properties:
      result:
        type: string
  v1alpha3.GenericVariable:
    properties:
      key:
        description: Variable name as a key
        type: string
      regexp_filter:
        description: A regexp filter which take value from HTTP request, or header etc.
        type: string
  v1alpha3.GenericWebhook:
    properties:
      cause:
        description: Indicate the reason why a webhook triggered
        type: string
      enable:
        description: Indicate if the generic webhook is enabled
        type: boolean
      filter_expression:
        description: Filter expression which against the filter name
        type: string
      filter_text:
        description: Filter name for the generic webhook, it could be a variable name
        type: string
      header_variables:
        description: Define variables which come from the HTTP request header
        type: array
        items:
          $ref: '#/definitions/v1alpha3.GenericVariable'
      print_post_content:
        description: Indicate if print the post content
        type: boolean
      print_variables:
        description: Indicate if print the variables
        type: boolean
      request_variables:
        description: Define variables which come from the HTTP request
        type: array
        items:
          $ref: '#/definitions/v1alpha3.GenericVariable'
      token:
        description: The token of generic webhook
        type: string
  v1alpha3.GitCloneOption:
    properties:
      depth:
        description: git clone depth
        type: integer
        format: int32
      shallow:
        description: Whether to use git shallow clone
        type: boolean
      timeout:
        description: git clone timeout mins
        type: integer
        format: int32
  v1alpha3.GitRepository:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.GitRepositorySpec'
      status:
        $ref: '#/definitions/v1alpha3.GitRepositoryStatus'
  v1alpha3.GitRepositorySpec:
    properties:
      owner:
        type: string
      provider:
        type: string
      repo:
        type: string
      secret:
        $ref: '#/definitions/v1.SecretReference'
      server:
        type: string
      url:
        type: string
      webhooks:
        type: array
        items:
          $ref: '#/definitions/v1.LocalObjectReference'
  v1alpha3.GitRepositoryStatus:
    properties:
      connection:
        type: string
      message:
        type: string
  v1alpha3.GitSource:
    properties:
      credential_id:
        description: credential id to access git source
        type: string
      discover_branches:
        description: Whether to discover a branch
        type: boolean
      discover_tags:
        description: Discover tags configuration
        type: boolean
      git_clone_option:
        description: advavced git clone options
        $ref: '#/definitions/v1alpha3.GitCloneOption'
      regex_filter:
        description: Regex used to match the name of the branch that needs to be run
        type: string
      scm_id:
        description: uid of scm
        type: string
      url:
        description: url of git source
        type: string
  v1alpha3.GithubSource:
    properties:
      accept_jenkins_notification:
        description: Allow Jenkins send build status notification to Github
        type: boolean
      api_uri:
        description: The api url can specify the location of the github apiserver.For private cloud configuration
        type: string
      credential_id:
        description: credential id to access github source
        type: string
      discover_branches:
        description: Discover branch configuration
        type: integer
        format: int32
      discover_pr_from_forks:
        description: Discover fork PR configuration
        $ref: '#/definitions/v1alpha3.DiscoverPRFromForks'
      discover_pr_from_origin:
        description: Discover origin PR configuration
        type: integer
        format: int32
      discover_tags:
        description: Discover tag configuration
        type: boolean
      git_clone_option:
        description: advavced git clone options
        $ref: '#/definitions/v1alpha3.GitCloneOption'
      owner:
        description: owner of github repo
        type: string
      regex_filter:
        description: Regex used to match the name of the branch that needs to be run
        type: string
      repo:
        description: repo name of github repo
        type: string
      scm_id:
        description: uid of scm
        type: string
  v1alpha3.GitlabSource:
    properties:
      accept_jenkins_notification:
        description: Allow Jenkins send build status notification to Gitlab
        type: boolean
      api_uri:
        description: The api url can specify the location of the gitlab apiserver.For private cloud configuration
        type: string
      credential_id:
        description: credential id to access gitlab source
        type: string
      discover_branches:
        description: Discover branch configuration
        type: integer
        format: int32
      discover_pr_from_forks:
        description: Discover fork PR configuration
        $ref: '#/definitions/v1alpha3.DiscoverPRFromForks'
      discover_pr_from_origin:
        description: Discover origin PR configuration
        type: integer
        format: int32
      discover_tags:
        description: Discover tags configuration
        type: boolean
      git_clone_option:
        description: advavced git clone options
        $ref: '#/definitions/v1alpha3.GitCloneOption'
      owner:
        description: owner of gitlab repo
        type: string
      regex_filter:
        description: Regex used to match the name of the branch that needs to be run
        type: string
      repo:
        description: repo name of gitlab repo
        type: string
      scm_id:
        description: uid of scm
        type: string
      server_name:
        description: the name of gitlab server which was configured in jenkins
        type: string
  v1alpha3.JWTToken:
    required:
      - iat
    properties:
      exp:
        type: integer
        format: int64
      iat:
        type: integer
        format: int64
      id:
        type: string
  v1alpha3.MultiBranchJobTrigger:
    properties:
      create_action_job_to_trigger:
        description: pipeline name to trigger
        type: string
      delete_action_job_to_trigger:
        description: pipeline name to trigger
        type: string
  v1alpha3.MultiBranchPipeline:
    required:
      - name
      - source_type
      - script_path
    properties:
      bitbucket_server_source:
        description: bitbucket server scm defile
        $ref: '#/definitions/v1alpha3.BitbucketServerSource'
      description:
        description: description of pipeline
        type: string
      discarder:
        description: Discarder of pipeline, managing when to drop a pipeline
        $ref: '#/definitions/v1alpha3.DiscarderProperty'
      git_source:
        description: git scm define
        $ref: '#/definitions/v1alpha3.GitSource'
      github_source:
        description: github scm define
        $ref: '#/definitions/v1alpha3.GithubSource'
      gitlab_source:
        description: gitlab scm define
        $ref: '#/definitions/v1alpha3.GitlabSource'
      multibranch_job_trigger:
        description: Pipeline tasks that need to be triggered when branch creation/deletion
        $ref: '#/definitions/v1alpha3.MultiBranchJobTrigger'
      name:
        description: name of pipeline
        type: string
      script_path:
        description: script path in scm
        type: string
      single_svn_source:
        description: single branch svn scm define
        $ref: '#/definitions/v1alpha3.SingleSvnSource'
      source_type:
        description: type of scm, such as github/git/svn
        type: string
      svn_source:
        description: multi branch svn scm define
        $ref: '#/definitions/v1alpha3.SvnSource'
      timer_trigger:
        description: Timer to trigger pipeline run
        $ref: '#/definitions/v1alpha3.TimerTrigger'
  v1alpha3.NoScmPipeline:
    required:
      - name
    properties:
      description:
        description: description of pipeline
        type: string
      disable_concurrent:
        description: Whether to prohibit the pipeline from running in parallel
        type: boolean
      discarder:
        description: Discarder of pipeline, managing when to drop a pipeline
        $ref: '#/definitions/v1alpha3.DiscarderProperty'
      generic_webhook:
        description: Generic webhook config
        $ref: '#/definitions/v1alpha3.GenericWebhook'
      jenkinsfile:
        description: Jenkinsfile's content'
        type: string
      name:
        description: name of pipeline
        type: string
      parameters:
        description: Parameters define of pipeline,user could pass param when run pipeline
        type: array
        items:
          $ref: '#/definitions/v1alpha3.ParameterDefinition'
      remote_trigger:
        description: Remote api define to trigger pipeline run
        $ref: '#/definitions/v1alpha3.RemoteTrigger'
      timer_trigger:
        description: Timer to trigger pipeline run
        $ref: '#/definitions/v1alpha3.TimerTrigger'
  v1alpha3.OrphanedResourceKey:
    properties:
      group:
        type: string
      kind:
        type: string
      name:
        type: string
  v1alpha3.OrphanedResourcesMonitorSettings:
    properties:
      ignore:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.OrphanedResourceKey'
      warn:
        type: boolean
  v1alpha3.Parameter:
    required:
      - name
      - value
    properties:
      name:
        description: parameter name
        type: string
      value:
        description: parameter value
        type: string
  v1alpha3.ParameterDefinition:
    required:
      - name
      - type
    properties:
      default_value:
        description: default value of param
        type: string
      description:
        description: description of pipeline
        type: string
      name:
        description: name of param
        type: string
      type:
        description: type of param
        type: string
  v1alpha3.ParameterValidation:
    required:
      - expression
      - message
    properties:
      expression:
        type: string
      message:
        type: string
  v1alpha3.Pipeline:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.PipelineSpec'
      status:
        $ref: '#/definitions/v1alpha3.PipelineStatus'
  v1alpha3.PipelineRun:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.PipelineRunSpec'
      status:
        $ref: '#/definitions/v1alpha3.PipelineRunStatus'
  v1alpha3.PipelineRunList:
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.PipelineRun'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ListMeta'
  v1alpha3.PipelineRunSpec:
    required:
      - pipelineRef
    properties:
      action:
        type: string
      parameters:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.Parameter'
      pipelineRef:
        $ref: '#/definitions/v1.ObjectReference'
      pipelineSpec:
        $ref: '#/definitions/v1alpha3.PipelineSpec'
      scm:
        $ref: '#/definitions/v1alpha3.SCM'
  v1alpha3.PipelineRunStatus:
    properties:
      completionTime:
        type: string
      conditions:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.Condition'
      phase:
        type: string
      startTime:
        type: string
      updateTime:
        type: string
  v1alpha3.PipelineSpec:
    required:
      - type
    properties:
      multi_branch_pipeline:
        description: in scm pipeline structs
        $ref: '#/definitions/v1alpha3.MultiBranchPipeline'
      pipeline:
        description: no scm pipeline structs
        $ref: '#/definitions/v1alpha3.NoScmPipeline'
      type:
        description: type of devops pipeline, in scm or no scm
        type: string
  v1alpha3.PipelineStatus: {}
  v1alpha3.ProjectRole:
    required:
      - name
    properties:
      description:
        type: string
      groups:
        type: array
        items:
          type: string
      jwtTokens:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.JWTToken'
      name:
        type: string
      policies:
        type: array
        items:
          type: string
  v1alpha3.RemoteTrigger:
    properties:
      token:
        description: remote trigger token
        type: string
  v1alpha3.SCM:
    required:
      - refType
      - refName
    properties:
      refName:
        type: string
      refType:
        type: string
  v1alpha3.SignatureKey:
    required:
      - keyID
    properties:
      keyID:
        type: string
  v1alpha3.SingleSvnSource:
    properties:
      credential_id:
        description: credential id to access svn source
        type: string
      remote:
        description: remote address url
        type: string
      scm_id:
        description: uid of scm
        type: string
  v1alpha3.SvnSource:
    properties:
      credential_id:
        description: credential id to access svn source
        type: string
      excludes:
        description: branches do not run pipeline
        type: string
      includes:
        description: branches to run pipeline
        type: string
      remote:
        description: remote address url
        type: string
      scm_id:
        description: uid of scm
        type: string
  v1alpha3.SyncWindow:
    properties:
      applications:
        type: array
        items:
          type: string
      clusters:
        type: array
        items:
          type: string
      duration:
        type: string
      kind:
        type: string
      manualSync:
        type: boolean
      namespaces:
        type: array
        items:
          type: string
      schedule:
        type: string
      timeZone:
        type: string
  v1alpha3.Template:
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/v1.ObjectMeta'
      spec:
        $ref: '#/definitions/v1alpha3.TemplateSpec'
      status:
        $ref: '#/definitions/v1alpha3.TemplateStatus'
  v1alpha3.TemplateParameter:
    required:
      - name
    properties:
      default:
        type: string
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
      validation:
        $ref: '#/definitions/v1alpha3.ParameterValidation'
  v1alpha3.TemplateSpec:
    properties:
      parameters:
        type: array
        items:
          $ref: '#/definitions/v1alpha3.TemplateParameter'
      template:
        type: string
  v1alpha3.TemplateStatus: {}
  v1alpha3.TimerTrigger:
    properties:
      cron:
        description: jenkins cron script
        type: string
      interval:
        description: interval ms
        type: string
  v1beta2.Decryption:
    required:
      - provider
    properties:
      provider:
        type: string
      secretRef:
        $ref: '#/definitions/meta.LocalObjectReference'
  v1beta2.Image:
    required:
      - name
    properties:
      digest:
        type: string
      name:
        type: string
      newName:
        type: string
      newTag:
        type: string
  v1beta2.JSON6902:
    required:
      - op
      - path
    properties:
      from:
        type: string
      op:
        type: string
      path:
        type: string
      value:
        type: string
  v1beta2.JSON6902Patch:
    required:
      - patch
      - target
    properties:
      patch:
        type: array
        items:
          $ref: '#/definitions/v1beta2.JSON6902'
      target:
        $ref: '#/definitions/v1beta2.Selector'
  v1beta2.KustomizationStatus:
    properties:
      conditions:
        type: array
        items:
          $ref: '#/definitions/v1.Condition'
      inventory:
        $ref: '#/definitions/v1beta2.ResourceInventory'
      lastAppliedRevision:
        type: string
      lastAttemptedRevision:
        type: string
      lastHandledReconcileAt:
        type: string
      observedGeneration:
        type: integer
        format: int64
  v1beta2.Patch:
    properties:
      patch:
        type: string
      target:
        $ref: '#/definitions/v1beta2.Selector'
  v1beta2.PostBuild:
    properties:
      substitute:
        type: object
        additionalProperties:
          type: string
      substituteFrom:
        type: array
        items:
          $ref: '#/definitions/v1beta2.SubstituteReference'
  v1beta2.ResourceInventory:
    required:
      - entries
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/v1beta2.ResourceRef'
  v1beta2.ResourceRef:
    required:
      - id
      - v
    properties:
      id:
        type: string
      v:
        type: string
  v1beta2.Selector:
    properties:
      annotationSelector:
        type: string
      group:
        type: string
      kind:
        type: string
      labelSelector:
        type: string
      name:
        type: string
      namespace:
        type: string
      version:
        type: string
  v1beta2.SubstituteReference:
    required:
      - kind
      - name
    properties:
      kind:
        type: string
      name:
        type: string
      optional:
        type: boolean
  v2beta1.CrossNamespaceObjectReference:
    required:
      - name
    properties:
      apiVersion:
        type: string
      kind:
        type: string
      name:
        type: string
      namespace:
        type: string
  v2beta1.HelmReleaseStatus:
    properties:
      conditions:
        type: array
        items:
          $ref: '#/definitions/v1.Condition'
      failures:
        type: integer
        format: int64
      helmChart:
        type: string
      installFailures:
        type: integer
        format: int64
      lastAppliedRevision:
        type: string
      lastAttemptedRevision:
        type: string
      lastAttemptedValuesChecksum:
        type: string
      lastHandledReconcileAt:
        type: string
      lastReleaseRevision:
        type: integer
        format: int32
      observedGeneration:
        type: integer
        format: int64
      upgradeFailures:
        type: integer
        format: int64
  v2beta1.Install:
    properties:
      crds:
        type: string
      createNamespace:
        type: boolean
      disableHooks:
        type: boolean
      disableOpenAPIValidation:
        type: boolean
      disableWait:
        type: boolean
      disableWaitForJobs:
        type: boolean
      remediation:
        $ref: '#/definitions/v2beta1.InstallRemediation'
      replace:
        type: boolean
      skipCRDs:
        type: boolean
      timeout:
        type: string
  v2beta1.InstallRemediation:
    properties:
      ignoreTestFailures:
        type: boolean
      remediateLastFailure:
        type: boolean
      retries:
        type: integer
        format: int32
  v2beta1.KubeConfig:
    properties:
      secretRef:
        $ref: '#/definitions/meta.SecretKeyReference'
  v2beta1.Kustomize:
    properties:
      images:
        type: array
        items:
          $ref: '#/definitions/v1beta2.Image'
      patches:
        type: array
        items:
          $ref: '#/definitions/v1beta2.Patch'
      patchesJson6902:
        type: array
        items:
          $ref: '#/definitions/v1beta2.JSON6902Patch'
      patchesStrategicMerge:
        type: array
        items:
          $ref: '#/definitions/v1.JSON'
  v2beta1.PostRenderer:
    properties:
      kustomize:
        $ref: '#/definitions/v2beta1.Kustomize'
  v2beta1.Rollback:
    properties:
      cleanupOnFail:
        type: boolean
      disableHooks:
        type: boolean
      disableWait:
        type: boolean
      disableWaitForJobs:
        type: boolean
      force:
        type: boolean
      recreate:
        type: boolean
      timeout:
        type: string
  v2beta1.Test:
    properties:
      enable:
        type: boolean
      ignoreFailures:
        type: boolean
      timeout:
        type: string
  v2beta1.Uninstall:
    properties:
      disableHooks:
        type: boolean
      disableWait:
        type: boolean
      keepHistory:
        type: boolean
      timeout:
        type: string
  v2beta1.Upgrade:
    properties:
      cleanupOnFail:
        type: boolean
      crds:
        type: string
      disableHooks:
        type: boolean
      disableOpenAPIValidation:
        type: boolean
      disableWait:
        type: boolean
      disableWaitForJobs:
        type: boolean
      force:
        type: boolean
      preserveValues:
        type: boolean
      remediation:
        $ref: '#/definitions/v2beta1.UpgradeRemediation'
      timeout:
        type: string
  v2beta1.UpgradeRemediation:
    properties:
      ignoreTestFailures:
        type: boolean
      remediateLastFailure:
        type: boolean
      retries:
        type: integer
        format: int32
      strategy:
        type: string
  v2beta1.ValuesReference:
    required:
      - kind
      - name
    properties:
      kind:
        type: string
      name:
        type: string
      optional:
        type: boolean
      targetPath:
        type: string
      valuesKey:
        type: string
securityDefinitions:
  BearerToken:
    description: Bearer Token Authentication
    type: apiKey
    name: Authorization
    in: header
security:
  - BearerToken: []
tags:
  - name: DevOps Project
  - name: Authentication
  - name: DevOps Credential
  - name: DevOps Scm
  - name: DevOps Pipeline
  - name: DevOps Jenkins
  - name: DevOps Webhook
  - name: DevOps Template
  - name: DevOps ClusterTemplate
