global:
  imageRegistry: ""
  imagePullSecrets: []

image:
  defaultRegistry: gcr.io
  registry: ""
  repository: cadvisor/cadvisor
  tag: ""
  digest: ""
  pullPolicy: IfNotPresent

  ## Reference to one or more secrets to be used when pulling images
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets: []

container:
  port: 8080
  additionalArgs:
    - --housekeeping_interval=10s                       # kubernetes default args
    - --max_housekeeping_interval=15s
    - --event_storage_event_limit=default=0
    - --event_storage_age_limit=default=0
    - --enable_metrics=app,cpu,disk,diskIO,memory,network,process
    - --docker_only
    - --store_container_labels=false
    - --whitelisted_container_labels=io.kubernetes.container.name,io.kubernetes.pod.name,io.kubernetes.pod.namespace
  hostPaths:
    - name: rootfs
      path: "/"
      mount: "/rootfs"
      readOnly: true
    - name: varrun
      path: "/var/run"
      readOnly: true
    - name: sys
      path: "/sys"
      readOnly: true
    - name: docker
      path: "/var/lib/docker"
      readOnly: true
    - name: disk
      path: "/dev/disk"
      readOnly: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podAnnotations: {}
podLabels: {}

daemonsetAnnotations:
  seccomp.security.alpha.kubernetes.io/pod: 'docker/default'

# priorityClassName: system-cluster-critical
priorityClassName: {}

# sometimes errors are encountered when using the cpu load reader without being on the host network
hostNetwork: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityPolicy:
  create: false
  privileged: false

# Specifies whether a securityContext should be created. Required for privileged operations.
podSecurityContext:
  create: false
  privileged: false

nodeSelector: {}

tolerations: []

affinity: {}

# This will create a ServiceMonitor Custom Resource indicating the prometheus operator what to scrape.
metrics:
  enabled: true

  # Labels for ServiceMonitor
  additionalLabels:
    app.kubernetes.io/vendor: kubesphere

  interval: 1m
  # scrapeTimeout: 30s
  # This will allow you to specify relabelings on the metrics before ingestion. E.g. to use the kubernetes monitoring
  metricRelabelings:
    - action: drop
      regex: >-
        container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
      sourceLabels:
      - __name__
    - action: drop
      regex: >-
        container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_memory_(mapped_file|swap)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_(file_descriptors|tasks_state|threads_max)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_spec.*
      sourceLabels:
      - __name__
    - action: keep
      regex: >-
        container_cpu_cfs_.*periods_total|container_cpu_usage_seconds_total|container_fs_(limit|usage)_bytes|container_fs_(reads|writes)_bytes_total|container_fs_(reads|writes)_total|container_memory_(cache|mapped_file|rss|usage_bytes|working_set_bytes)|container_network_(receive|transmit)_(bytes|packets|packets_dropped)_total|container_processes.*|container_threads.*
      sourceLabels:
      - __name__
    - sourceLabels:
      - container_label_io_kubernetes_pod_name
      targetLabel: pod
    - sourceLabels:
      - container_label_io_kubernetes_container_name
      targetLabel: container
    - sourceLabels:
      - container_label_io_kubernetes_pod_namespace
      targetLabel: namespace
    - action: labeldrop
      regex: container_label_io_kubernetes_pod_name
    - action: labeldrop
      regex: container_label_io_kubernetes_container_name
    - action: labeldrop
      regex: container_label_io_kubernetes_pod_namespace
    - action: drop
      regex: .+;
      sourceLabels:
      - id
      - pod
  # This will allow you to specify relabelings on the metrics before scraping.
  relabelings:
    - sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
    - sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
      replacement: /metrics/cadvisor
    - action: labeldrop
      regex: (service|endpoint)
    - sourceLabels:
      - job
      targetLabel: job
      replacement: kubelet
