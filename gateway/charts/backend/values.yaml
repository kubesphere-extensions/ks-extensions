# Default values for gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Override the deployment name
##
nameOverride: ""

## Provide a name to substitute for the full names of resources
##
fullnameOverride: ""

global:
  imageRegistry: docker.io
  imagePullSecrets: [ ]
  rbac:
    create: true

config:
  gateway:
    namespace: kubesphere-controls-system
    valuesOverride:
      controller:
        image:
          registry: ""
          image: kubesphere/nginx-ingress-controller
          tag: "v1.4.0"
          pullPolicy: IfNotPresent
          digest: ""
    exposeNodeLabelKey: "node-role.kubernetes.io/control-plane"
    versionConstraint: ">= 4.3.0, < 4.5.0"
    logSearchEndpoint: ""

apiserver:
  enabled: true
  replicaCount: 1

  image:
    repository: kubesphere/gateway-apiserver
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.0.2"

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 9090

  resources:
    limits:
      cpu: 1
      memory: 1000Mi
    requests:
      cpu: 20m
      memory: 50Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts: []
  ## Additional volumeMounts to the apiserver container.
  #  - name: example-config
  #   mountPath: /etc/kubesphere/example

  extraVolumes: []
  ## Additional volumes to the apiserver pod.
  #  - name: example-config
  #    emptyDir: {}

controller:
  enabled: true

  replicaCount: 1

  image:
    repository: kubesphere/gateway-controller-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.0.2"

  imagePullSecrets: []

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  extraVolumeMounts: []
  ## Additional volumeMounts to the apiserver container.
  #  - name: example-config
  #   mountPath: /etc/kubesphere/example

  extraVolumes: []
  ## Additional volumes to the apiserver pod.
  #  - name: example-config
  #    emptyDir: {}


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# DON'T ENABLE UPGRADE unless you know exactly what will happen. Upgrading gateway from v1.0.1 to v1.0.2,
# and upgrading job will cause a temporary service interruption for cluster gateway until job is completed.
upgradeGateway:
  enabled: false
  image:
    repository: kubesphere/kubectl
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.27.16"
  gatewayOverride:
    metadata:
      labels:
        kubesphere.io/gateway-type: cluster
      name: kubesphere-router-cluster
    spec:
      values:
        controller:
          ingressClassResource:
            name: kubesphere-router-cluster
        fullnameOverride: kubesphere-router-cluster
